{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  mo: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n        capacity: action.item.capacity\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.item.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = item => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      item: item\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","mo","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","items","findIndex","id","existingCartItem","updatedItems","updatedItem","capacity","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,EAAE,EAAE,EADiB;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,kBAAkB,GACpBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADxD;AAGA,UAAMC,qBAAqB,GAAGP,KAAK,CAACQ,KAAN,CAAYC,SAAZ,CACzBL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYT,MAAM,CAACG,IAAP,CAAYM,EADR,CAA9B;AAGA,UAAMC,gBAAgB,GAAGX,KAAK,CAACQ,KAAN,CAAYD,qBAAZ,CAAzB;AACA,QAAIK,YAAJ;;AAEA,QAAID,gBAAJ,EAAsB;AAClB,YAAME,WAAW,GAAG,EAChB,GAAGF,gBADa;AAEhBL,QAAAA,MAAM,EAAEK,gBAAgB,CAACL,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE,MAF9B;AAGhBQ,QAAAA,QAAQ,EAAEb,MAAM,CAACG,IAAP,CAAYU;AAHN,OAApB;AAKAF,MAAAA,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACQ,KAAV,CAAf;AACAI,MAAAA,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;AACH,KARD,MAQO;AACHD,MAAAA,YAAY,GAAGZ,KAAK,CAACQ,KAAN,CAAYO,MAAZ,CAAmBd,MAAM,CAACG,IAA1B,CAAf;AACH;;AAED,WAAO;AACHI,MAAAA,KAAK,EAAEI,YADJ;AAEHd,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,UAAMK,qBAAqB,GAAGP,KAAK,CAACQ,KAAN,CAAYC,SAAZ,CACzBL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYT,MAAM,CAACG,IAAP,CAAYM,EADR,CAA9B;AAGA,UAAMM,YAAY,GAAGhB,KAAK,CAACQ,KAAN,CAAYD,qBAAZ,CAArB;AACA,UAAMJ,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBkB,YAAY,CAACX,KAA5D;AACA,QAAIO,YAAJ;;AACA,QAAII,YAAY,CAACV,MAAb,KAAwB,CAA5B,EAA+B;AAC3BM,MAAAA,YAAY,GAAGZ,KAAK,CAACQ,KAAN,CAAYS,MAAZ,CAAmBb,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYT,MAAM,CAACG,IAAP,CAAYM,EAAnD,CAAf;AACH,KAFD,MAEO;AACH,YAAMG,WAAW,GAAG,EAAE,GAAGG,YAAL;AAAmBV,QAAAA,MAAM,EAAEU,YAAY,CAACV,MAAb,GAAsB;AAAjD,OAApB;AACAM,MAAAA,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACQ,KAAV,CAAf;AACAI,MAAAA,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;AACH;;AAED,WAAO;AACHL,MAAAA,KAAK,EAAEI,YADJ;AAEHd,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AAED,SAAOP,gBAAP;AACH,CAlDD;;AAoDA,MAAMsB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkC3B,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAM0B,oBAAoB,GAAIlB,IAAD,IAAU;AACnCiB,IAAAA,kBAAkB,CAAC;AAAEnB,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMmB,yBAAyB,GAAInB,IAAD,IAAU;AACxCiB,IAAAA,kBAAkB,CAAC;AAAEnB,MAAAA,IAAI,EAAE,QAAR;AAAkBE,MAAAA,IAAI,EAAEA;AAAxB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMoB,WAAW,GAAG;AAChBhB,IAAAA,KAAK,EAAEY,SAAS,CAACZ,KADD;AAEhBV,IAAAA,WAAW,EAAEsB,SAAS,CAACtB,WAFP;AAGhB2B,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n    mo: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n        const updatedTotalAmount =\r\n            state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.item.id\r\n        );\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n\r\n        if (existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount,\r\n                capacity: action.item.capacity\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        } else {\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount,\r\n        };\r\n    }\r\n    if (action.type === 'REMOVE') {\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.item.id\r\n        );\r\n        const existingItem = state.items[existingCartItemIndex];\r\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n        let updatedItems;\r\n        if (existingItem.amount === 1) {\r\n            updatedItems = state.items.filter(item => item.id !== action.item.id);\r\n        } else {\r\n            const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({ type: 'ADD', item: item });\r\n    };\r\n\r\n    const removeItemFromCartHandler = (item) => {\r\n        dispatchCartAction({ type: 'REMOVE', item: item });\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}