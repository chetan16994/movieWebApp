{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\Components\\\\Movies\\\\SearchMovie.js\",\n    _s2 = $RefreshSig$();\n\nimport { useCallback, useState, Fragment, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchMovie = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [title, setTitle] = useState('');\n\n  const searchMovieHandler = event => {\n    _s();\n\n    // event.preventDefault();\n    const searchMovieFetch = useCallback(async () => {\n      try {\n        // console.log(idRef.current.value)\n        const movieName = \"oxygen\";\n        const url = `https://imdb-api.com/en/API/SearchMovie/k_d40xdze4/${movieName}`;\n        console.log(url);\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n\n        const data = await response.json();\n        console.log(data.result);\n      } catch (error) {// setError(error.message);\n      }\n    }, []);\n  };\n\n  _s(searchMovieHandler, \"FtIBkfuFTowBOA0AgMaR+0VrXzw=\");\n\n  useEffect(() => {\n    searchMovieFetch();\n  }, [searchMovieFetch]);\n\n  const titleChangeHandler = event => {\n    event.preventDefault();\n    setTitle(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchMovieHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Search Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(SearchMovie, \"FgwV7fs/MKl3JfXZzkj+8ZExyxs=\");\n\n_c = SearchMovie;\nexport default SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/Components/Movies/SearchMovie.js"],"names":["useCallback","useState","Fragment","useEffect","SearchMovie","title","setTitle","searchMovieHandler","event","searchMovieFetch","movieName","url","console","log","response","fetch","ok","Error","data","json","result","error","titleChangeHandler","preventDefault","target","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAqBC,QAArB,EAA+BC,QAA/B,EAAwCC,SAAxC,QAAyD,OAAzD;;;AACA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMM,kBAAkB,GAAEC,KAAK,IAAG;AAAA;;AAC9B;AACA,UAAMC,gBAAgB,GAAGT,WAAW,CAAC,YAAY;AAEjD,UAAI;AACA;AACA,cAAMU,SAAS,GAAE,QAAjB;AACA,cAAMC,GAAG,GAAI,sDAAqDD,SAAU,EAA5E;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,cAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA5B;;AACA,YAAI,CAACG,QAAQ,CAACE,EAAd,EAAkB;AACd,gBAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACD,cAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACE,MAAjB;AAEH,OAZD,CAYE,OAAOC,KAAP,EAAc,CACZ;AACH;AACJ,KAjBuC,EAiBrC,EAjBqC,CAApC;AAkBP,GApBG;;AAHqB,KAGfd,kBAHe;;AAwBrBJ,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;;AAIA,QAAMa,kBAAkB,GAAGd,KAAK,IAAG;AAC/BA,IAAAA,KAAK,CAACe,cAAN;AACAjB,IAAAA,QAAQ,CAACE,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAR;AACH,GAHD;;AAKA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAElB,kBAAhB;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,OAAtB;AAA8B,UAAA,KAAK,EAAEF,KAArC;AAA4C,UAAA,QAAQ,EAAEiB;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA5CD;;IAAMlB,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import { useCallback,useState, Fragment,useEffect } from \"react\";\r\nconst SearchMovie = () =>{\r\n\r\n    const [title, setTitle]=useState('');\r\n    const searchMovieHandler= event =>{\r\n        // event.preventDefault();\r\n        const searchMovieFetch = useCallback(async () => {\r\n        \r\n        try {\r\n            // console.log(idRef.current.value)\r\n            const movieName =\"oxygen\"\r\n            const url = `https://imdb-api.com/en/API/SearchMovie/k_d40xdze4/${movieName}`\r\n            console.log(url)\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            console.log(data.result);\r\n           \r\n        } catch (error) {\r\n            // setError(error.message);\r\n        }\r\n    }, []);\r\n}\r\n    useEffect(() => {\r\n        searchMovieFetch();\r\n    }, [searchMovieFetch]);\r\n\r\n    const titleChangeHandler = event =>{\r\n        event.preventDefault();\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={searchMovieHandler}>\r\n                <div>\r\n                    <label htmlFor='title'>Movie title</label>\r\n                    <input type='text' id='title' value={title} onChange={titleChangeHandler} />\r\n                </div>\r\n                <button>Search Movie</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default SearchMovie;"]},"metadata":{},"sourceType":"module"}