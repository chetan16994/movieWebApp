{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\Components\\\\Movies\\\\AddMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef, useCallback, useState, useEffect } from 'react';\nimport useInput from '../../hooks/use-input';\nimport classes from './AddMovie.module.css'; // import validationClasses from '../UI/FormValidation.module.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddMovie(props) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [title, setTitle] = useState('');\n  const [tagline, setTagline] = useState('');\n  const [plot, setPlot] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [duration, setDuration] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [showingStatus, setShowingStatus] = useState('coming soon'); // const [capacity, setCapacity] = useState(\"none\");\n\n  const [screenNumber, setScreenNumber] = useState(\"none\"); // const [timeSlot, setTimeSlot] = useState(\"none\");\n\n  const [price, setPrice] = useState(\"none\");\n  const [capacityTouched, setCapacityTouched] = useState(false);\n  const [timeSlotTouched, setTimeSlotTouched] = useState(false);\n  const [screenNumberTouched, setScreenNumberTouched] = useState(false);\n  const [priceTouched, setPriceTouched] = useState(false);\n  const {\n    value: capacity,\n    isValid: capacityIsValid,\n    hasError: capacityIsInvalid,\n    valueChangeHandler: capacityChangeHandler,\n    inputBlurHandler: capacityBlurHandler,\n    reset: resetCapacity\n  } = useInput((capacity, showingStatus) => showingStatus === 'coming soon' || capacity > 30 && capacity <= 60); // const capacityIsValid = showingStatus ==='coming soon' || (capacity>30 && capacity<=60);\n  // const capacityIsInvalid =  ( !capacityIsValid && capacityTouched);\n\n  const {\n    value: timeSlot,\n    isValid: timeSlotIsValid,\n    hasError: timeSlotIsInvalid,\n    valueChangeHandler: timeSlotChangeHandler,\n    inputBlurHandler: timeSlotBlurHandler,\n    reset: resetTimeSlot\n  } = useInput((timeSlot, showingStatus) => showingStatus === 'coming soon' || timeSlot != \"none\"); // const timeSlotIsValid = showingStatus === 'coming soon' || (timeSlot!=\"none\");\n  // const timeSlotIsInvalid = (!timeSlotIsValid && timeSlotTouched);\n\n  const screenNumberIsValid = showingStatus === 'coming soon' || screenNumber != \"none\";\n  const screenNumberIsInvalid = !screenNumberIsValid && screenNumberTouched;\n  const priceIsValid = showingStatus === 'coming soon' || price != \"none\";\n  const priceIsInvalid = !priceIsValid && priceTouched;\n  let formIsValid = false;\n\n  if (capacityIsValid && timeSlotIsValid && screenNumberIsValid && priceIsValid) {\n    formIsValid = true;\n  }\n\n  const titleChangeHandler = event => {\n    setTitle(event.target.value);\n  };\n\n  const releaseDateChangeHandler = event => {\n    setReleaseDate(event.target.value);\n  };\n\n  const plotChangeHandler = event => {\n    setPlot(event.target.value);\n  };\n\n  const taglineChangeHandler = event => {\n    setTagline(event.target.value);\n  };\n\n  const durationChangeHandler = event => {\n    setDuration(event.target.value);\n  };\n\n  const imageUrlChangeHandler = event => {\n    setImageUrl(event.target.value);\n  };\n\n  const statusChangeHandler = event => {\n    setShowingStatus(event.target.value);\n  };\n\n  const screenNumberChangeHandler = event => {\n    setScreenNumber(event.target.value);\n  };\n\n  const priceChangeHandler = event => {\n    setPrice(event.target.value);\n  };\n\n  const screenNumberBlurHandler = () => {\n    setScreenNumberTouched(true);\n  };\n\n  const priceBlurHandler = () => {\n    setPriceTouched(true);\n  };\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      const url = `https://imdb-api.com/en/API/Title/k_d40xdze4/${props.id}`; // const url = `https://imdb-api.com/en/API/Title/k_2e0orz7h/${props.id}`\n\n      console.log(url);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedMovies = {\n        id: data.id,\n        title: data.title,\n        plot: data.plot,\n        tagline: data.tagline,\n        releaseDate: data.releaseDate,\n        rating: data.imDbRating,\n        tagline: data.tagline,\n        duration: data.runtimeStr,\n        image: data.image,\n        genres: data.genreList\n      };\n      setMovie(transformedMovies);\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    try {\n      const response = await fetch('https://movie-react-16994-default-rtdb.firebaseio.com/movie.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      props.addMovie(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ;\n\n  function submitHandler(event) {\n    event.preventDefault(); // could add validation here...\n\n    setCapacityTouched(true);\n    setScreenNumberTouched(true);\n    setTimeSlotTouched(true);\n    setScreenNumberTouched(true);\n\n    if (!capacityIsValid || !priceIsValid || !screenNumberIsValid || !timeSlotIsValid) {\n      return;\n    }\n\n    resetCapacity();\n    resetTimeSlot();\n    const movieData = {\n      id: props.id,\n      name: title,\n      tagline: tagline,\n      plot: plot,\n      releaseDate: releaseDate,\n      duration: duration,\n      image: imageUrl,\n      capacity: capacity,\n      rating: movie.rating,\n      genres: movie.genres,\n      showingStatus: showingStatus,\n      theater: screenNumber,\n      timimg: timeSlot,\n      price: price\n    };\n    addMovieHandler(movieData);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        width: \"500px\",\n        marginLeft: \"90px\"\n      },\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"IMDB id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"id\" // ref={idRef} \n          ,\n          value: props.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.title,\n          type: \"text\",\n          id: \"title\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tagline\",\n          children: \"Tagline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.tagline,\n          type: \"text\",\n          id: \"tagline\",\n          onChange: taglineChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"plot\",\n          children: \"plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: movie.plot,\n          rows: \"5\",\n          id: \"plot\",\n          onChange: plotChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.releaseDate,\n          type: \"text\",\n          id: \"date\",\n          onChange: releaseDateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.duration,\n          type: \"text\",\n          id: \"duration\",\n          onChange: durationChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUrl\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.image,\n          type: \"text\",\n          id: \"imageUrl\",\n          onChange: imageUrlChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Showing Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"option\",\n            onChange: statusChangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"coming soon\",\n              children: \"coming soon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"now showing\",\n              children: \"now showing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), showingStatus === \"now showing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"capacity\",\n          children: \"Seat Capacity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"capacity\",\n          value: capacity,\n          onChange: capacityChangeHandler,\n          onBlur: capacityBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), capacityIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"seat capacity must be between 30 and 60\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this), \" \", showingStatus === \"now showing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Showtime Slot\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"option\",\n            onChange: timeSlotChangeHandler,\n            onBlur: timeSlotBlurHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"8-11 AM\",\n              children: \"8-11 AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"12-3 PM\",\n              children: \"12-3 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4-7 PM\",\n              children: \"4-7 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"8-11 PM\",\n              children: \"8-11 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), timeSlotIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Time slot cant be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), \" \", showingStatus === \"now showing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Screen Number\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"option\",\n            onChange: screenNumberChangeHandler,\n            onBlur: screenNumberBlurHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Screen 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Screen 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Screen 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"Screen 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), screenNumberIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Screen Number cant be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), \" \", showingStatus === \"now showing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ticket Price\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"option\",\n            onChange: priceChangeHandler,\n            onBlur: priceBlurHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"$ 10.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"12\",\n              children: \"$ 12.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"15\",\n              children: \"$ 15.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"17\",\n              children: \"$ 17.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), priceIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Price cant be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes['form-action'],\n        children: [console.log(formIsValid, \"fir,,,\"), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"white\",\n        marginLeft: \"300px\",\n        fontSize: \"35px\"\n      },\n      children: \"Loading ......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddMovie, \"zpaUORFsO/sfu06LA+gWjkW1sIE=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = AddMovie;\nexport default AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/Components/Movies/AddMovie.js"],"names":["React","Fragment","useRef","useCallback","useState","useEffect","useInput","classes","AddMovie","props","isLoading","setIsLoading","movie","setMovie","title","setTitle","tagline","setTagline","plot","setPlot","releaseDate","setReleaseDate","duration","setDuration","imageUrl","setImageUrl","showingStatus","setShowingStatus","screenNumber","setScreenNumber","price","setPrice","capacityTouched","setCapacityTouched","timeSlotTouched","setTimeSlotTouched","screenNumberTouched","setScreenNumberTouched","priceTouched","setPriceTouched","value","capacity","isValid","capacityIsValid","hasError","capacityIsInvalid","valueChangeHandler","capacityChangeHandler","inputBlurHandler","capacityBlurHandler","reset","resetCapacity","timeSlot","timeSlotIsValid","timeSlotIsInvalid","timeSlotChangeHandler","timeSlotBlurHandler","resetTimeSlot","screenNumberIsValid","screenNumberIsInvalid","priceIsValid","priceIsInvalid","formIsValid","titleChangeHandler","event","target","releaseDateChangeHandler","plotChangeHandler","taglineChangeHandler","durationChangeHandler","imageUrlChangeHandler","statusChangeHandler","screenNumberChangeHandler","priceChangeHandler","screenNumberBlurHandler","priceBlurHandler","fetchMoviesHandler","url","id","console","log","response","fetch","ok","Error","data","json","transformedMovies","rating","imDbRating","runtimeStr","image","genres","genreList","error","message","addMovieHandler","method","body","JSON","stringify","headers","addMovie","submitHandler","preventDefault","movieData","name","theater","timimg","width","marginLeft","control","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useCallback, useState, useEffect } from 'react';\r\nimport useInput from '../../hooks/use-input';\r\n\r\nimport classes from './AddMovie.module.css';\r\n// import validationClasses from '../UI/FormValidation.module.css';\r\n\r\nfunction AddMovie(props) {\r\n    \r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [movie, setMovie] = useState([]);    \r\n    const [title,setTitle]=useState('');\r\n    const [tagline,setTagline] = useState('');\r\n    const [plot,setPlot] = useState('');\r\n    const [releaseDate,setReleaseDate] = useState('');\r\n    const [duration,setDuration] = useState('');\r\n    const [imageUrl,setImageUrl] = useState('')\r\n    const [showingStatus, setShowingStatus] = useState('coming soon');\r\n    // const [capacity, setCapacity] = useState(\"none\");\r\n    const [screenNumber, setScreenNumber] = useState(\"none\");\r\n    // const [timeSlot, setTimeSlot] = useState(\"none\");\r\n    const [price, setPrice] = useState(\"none\");\r\n\r\n    const [capacityTouched,setCapacityTouched]=useState(false);\r\n    const [timeSlotTouched, setTimeSlotTouched] = useState(false);\r\n    const [screenNumberTouched, setScreenNumberTouched] = useState(false);\r\n    const [priceTouched, setPriceTouched] = useState(false);\r\n\r\n    const {\r\n        value: capacity,\r\n        isValid: capacityIsValid,\r\n        hasError: capacityIsInvalid,\r\n        valueChangeHandler: capacityChangeHandler,\r\n        inputBlurHandler: capacityBlurHandler,\r\n        reset: resetCapacity,\r\n    } = useInput((capacity,showingStatus) => showingStatus === 'coming soon' || (capacity > 30 && capacity <= 60));\r\n\r\n    // const capacityIsValid = showingStatus ==='coming soon' || (capacity>30 && capacity<=60);\r\n    // const capacityIsInvalid =  ( !capacityIsValid && capacityTouched);\r\n\r\n    const {\r\n        value: timeSlot,\r\n        isValid: timeSlotIsValid,\r\n        hasError: timeSlotIsInvalid,\r\n        valueChangeHandler: timeSlotChangeHandler,\r\n        inputBlurHandler: timeSlotBlurHandler,\r\n        reset: resetTimeSlot,\r\n    } = useInput((timeSlot, showingStatus) => showingStatus === 'coming soon' || (timeSlot != \"none\"));\r\n\r\n    // const timeSlotIsValid = showingStatus === 'coming soon' || (timeSlot!=\"none\");\r\n    // const timeSlotIsInvalid = (!timeSlotIsValid && timeSlotTouched);\r\n\r\n    const screenNumberIsValid = showingStatus === 'coming soon' || (screenNumber != \"none\");\r\n    const screenNumberIsInvalid = (!screenNumberIsValid && screenNumberTouched);\r\n\r\n    const priceIsValid = showingStatus === 'coming soon' || (price != \"none\");\r\n    const priceIsInvalid = (!priceIsValid && priceTouched);\r\n\r\n    let formIsValid = false;\r\n\r\n    if (capacityIsValid && timeSlotIsValid && screenNumberIsValid && priceIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const titleChangeHandler = event => {\r\n        setTitle(event.target.value);\r\n    };\r\n    const releaseDateChangeHandler = event => {\r\n        setReleaseDate(event.target.value);\r\n    };\r\n    const plotChangeHandler = event => {\r\n        setPlot(event.target.value);\r\n    };\r\n    const taglineChangeHandler = event => {\r\n        setTagline(event.target.value);\r\n    };\r\n    const durationChangeHandler = event => {\r\n        setDuration(event.target.value);\r\n    };\r\n    const imageUrlChangeHandler = event => {\r\n        setImageUrl(event.target.value);\r\n    };\r\n    const statusChangeHandler = event => {\r\n        setShowingStatus(event.target.value);\r\n    };\r\n    const screenNumberChangeHandler = event => {\r\n        setScreenNumber(event.target.value);\r\n    };\r\n   \r\n\r\n    const priceChangeHandler = event => {\r\n        setPrice(event.target.value);\r\n    };\r\n    const screenNumberBlurHandler = () => {\r\n        setScreenNumberTouched(true);\r\n    };\r\n    const priceBlurHandler = () => {\r\n        setPriceTouched(true);\r\n    };\r\n\r\n    const fetchMoviesHandler = useCallback(async () => {\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const url = `https://imdb-api.com/en/API/Title/k_d40xdze4/${props.id}`\r\n            // const url = `https://imdb-api.com/en/API/Title/k_2e0orz7h/${props.id}`\r\n            console.log(url)\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            \r\n            const transformedMovies =\r\n            {\r\n                id: data.id,\r\n                title: data.title,\r\n                plot: data.plot,\r\n                tagline: data.tagline,\r\n                releaseDate: data.releaseDate,\r\n                rating: data.imDbRating,\r\n                tagline: data.tagline,\r\n                duration: data.runtimeStr,\r\n                image: data.image,\r\n                genres:data.genreList\r\n            };\r\n            setMovie(transformedMovies);\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchMoviesHandler();\r\n    }, [fetchMoviesHandler]);\r\n\r\n    async function addMovieHandler(movie) {\r\n        try{\r\n        const response = await fetch('https://movie-react-16994-default-rtdb.firebaseio.com/movie.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify(movie),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        props.addMovie(false)\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        // could add validation here...\r\n\r\n        setCapacityTouched(true);\r\n        setScreenNumberTouched(true);\r\n        setTimeSlotTouched(true);\r\n        setScreenNumberTouched(true);\r\n\r\n        if (!capacityIsValid || !priceIsValid || !screenNumberIsValid || !timeSlotIsValid) {\r\n            return;\r\n        }\r\n\r\n        resetCapacity();\r\n        resetTimeSlot();\r\n\r\n        const movieData = {\r\n            id: props.id,\r\n            name: title,\r\n            tagline: tagline,\r\n            plot: plot,\r\n            releaseDate: releaseDate,\r\n            duration: duration,\r\n            image: imageUrl,\r\n            capacity: capacity,\r\n            rating:movie.rating,\r\n            genres:movie.genres,\r\n            showingStatus:showingStatus,\r\n            theater:screenNumber,\r\n            timimg: timeSlot,\r\n            price: price\r\n        };\r\n\r\n        addMovieHandler(movieData)\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <form style={{ width: \"500px\", marginLeft: \"90px\" }} onSubmit={submitHandler}>\r\n                <div className={classes.control} >\r\n                    <label htmlFor='id'>IMDB id</label>\r\n                    <input type='text' id='id' \r\n                    // ref={idRef} \r\n                    value={props.id}\r\n                />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='title'>Title</label>\r\n                    <input value={movie.title} type='text' id='title' onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='tagline'>Tagline</label>\r\n                    <input value={movie.tagline} type='text' id='tagline' onChange={taglineChangeHandler} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='plot'>plot</label>\r\n                    <textarea value={movie.plot} rows='5' id='plot' onChange={plotChangeHandler}></textarea>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='date'>Release Date</label>\r\n                    <input value={movie.releaseDate} type='text' id='date' onChange={ releaseDateChangeHandler} />\r\n                </div>               \r\n                <div className={classes.control}>\r\n                    <label htmlFor='duration'>Duration</label>\r\n                    <input value={movie.duration} type='text' id='duration' onChange={ durationChangeHandler} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='imageUrl'>Image</label>\r\n                    <input value={movie.image} type='text' id='imageUrl' onChange={ imageUrlChangeHandler} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Showing Status\r\n                        <select name='option' onChange={statusChangeHandler}>\r\n                            <option value=\"coming soon\">coming soon</option>\r\n                            <option value=\"now showing\">now showing</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                {showingStatus===\"now showing\" && \r\n                    <div className={classes.control}>\r\n                    <label htmlFor='capacity'>Seat Capacity</label>\r\n                    <input type='number' id='capacity' value={capacity} \r\n                        onChange={capacityChangeHandler} \r\n                        onBlur={capacityBlurHandler}\r\n                    />\r\n                    {capacityIsInvalid && (\r\n                        <p className={classes['error-text']}>seat capacity must be between 30 and 60</p>\r\n                    )}\r\n                </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Showtime Slot\r\n                        <select name='option' onChange={timeSlotChangeHandler} onBlur={timeSlotBlurHandler}>\r\n                            <option value=\"none\">None</option>\r\n                            <option value='8-11 AM'>8-11 AM</option>\r\n                            <option value='12-3 PM'>12-3 PM</option>\r\n                            <option value='4-7 PM'>4-7 PM</option>\r\n                            <option value='8-11 PM'>8-11 PM</option>\r\n                        </select>\r\n                    </label>\r\n                    {timeSlotIsInvalid && (\r\n                        <p className={classes['error-text']}>Time slot cant be empty</p>\r\n                    )}\r\n                </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Screen Number\r\n                        <select name='option' onChange={screenNumberChangeHandler} onBlur={screenNumberBlurHandler}>\r\n                            <option value=\"none\">None</option>\r\n                            <option value='1'>Screen 1</option>\r\n                            <option value='2'>Screen 2</option>\r\n                            <option value='3'>Screen 3</option>\r\n                            <option value='4'>Screen 4</option>\r\n                        </select>\r\n                    </label>\r\n                    {screenNumberIsInvalid && (\r\n                        <p className={classes['error-text']}>Screen Number cant be empty</p>\r\n                    )}\r\n                </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Ticket Price\r\n                        <select name='option' onChange={priceChangeHandler} onBlur={priceBlurHandler}>\r\n                            <option value=\"none\">None</option>\r\n                            <option value='10'>$ 10.00</option>\r\n                            <option value='12'>$ 12.00</option>\r\n                            <option value='15'>$ 15.00</option>\r\n                            <option value='17'>$ 17.00</option>\r\n                        </select>\r\n                    </label>\r\n                    {priceIsInvalid && (\r\n                        <p className={classes['error-text']}>Price cant be empty</p>\r\n                    )}\r\n                </div>\r\n                }\r\n\r\n                <div className={classes['form-action']}>\r\n                    {console.log(formIsValid,\"fir,,,\")}\r\n                    <button disabled={!formIsValid}>Submit</button>\r\n                </div>\r\n            </form>\r\n            {isLoading && <p style={{ color: \"white\", marginLeft: \"300px\", fontSize: \"35px\" }}>Loading ......</p>}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}