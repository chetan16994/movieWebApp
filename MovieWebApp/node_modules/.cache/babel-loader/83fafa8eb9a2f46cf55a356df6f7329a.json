{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\Components\\\\Movies\\\\AddMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef, useCallback, useState, useEffect } from 'react';\nimport classes from './AddMovie.module.css'; // import validationClasses from '../UI/FormValidation.module.css';\n\nimport useHttp from '../../hooks/use-Http';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddMovie(props) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [showingStatus, setShowingStatus] = useState('coming soon');\n  const [capacity, setCapacity] = useState(\"none\");\n  const [screenNumber, setScreenNumber] = useState(\"none\");\n  const [timeSlot, setTimeSlot] = useState(\"none\");\n  const [price, setPrice] = useState(\"none\");\n  const capacityIsValid = showingStatus === 'coming soon' || capacity > 30 && capacity <= 60;\n  const timeSlotIsValid = showingStatus === 'coming soon' || timeSlot != \"none\";\n  const screenNumberIsValid = showingStatus === 'coming soon' || screenNumber != \"none\";\n  const priceIsValid = showingStatus === 'coming soon' || price != \"none\";\n  let formIsValid = false;\n\n  if (capacityIsValid && timeSlotIsValid && screenNumberIsValid && priceIsValid) {\n    formIsValid = true;\n  }\n\n  const statusChangeHandler = event => {\n    setShowingStatus(event.target.value);\n  };\n\n  const screenNumberChangeHandler = event => {\n    setScreenNumber(event.target.value);\n  };\n\n  const timeSlotChangeHandler = event => {\n    setTimeSlot(event.target.value);\n  };\n\n  const priceChangeHandler = event => {\n    setPrice(event.target.value);\n  };\n\n  const capacityChangeHandler = event => {\n    setCapacity(event.target.value);\n  };\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      // const url = `https://imdb-api.com/en/API/Title/k_d40xdze4/${props.id}`\n      const url = `https://imdb-api.com/en/API/Title/k_2e0orz7h/${props.id}`; // const url = `https://imdb-api.com/en/API/Title/k_u87040tw/${props.id}`\n\n      console.log(url);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedMovies = {\n        id: data.id,\n        title: data.title,\n        plot: data.plot,\n        tagline: data.tagline,\n        releaseDate: data.releaseDate,\n        rating: data.imDbRating,\n        tagline: data.tagline,\n        duration: data.runtimeStr,\n        image: data.image,\n        genres: data.genreList\n      };\n      console.log(transformedMovies, \"  trans\");\n      setMovie(transformedMovies);\n    } catch (error) {\n      console.log(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    try {\n      const response = await fetch('https://movie-react-16994-default-rtdb.firebaseio.com/movie.json', {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      props.addMovie(false);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ;\n\n  function submitHandler(event) {\n    event.preventDefault(); // could add validation here...\n\n    if (!capacityIsValid || !priceIsValid || !screenNumberIsValid || !timeSlotIsValid) {\n      return;\n    }\n\n    const movieData = {\n      id: props.id,\n      name: movie.title,\n      tagline: movie.tagline ? movie.tagline : \"\",\n      plot: movie.plot ? movie.plot : \"\",\n      releaseDate: movie.releaseDate ? movie.releaseDate : \"\",\n      duration: movie.duration ? movie.duration : \"\",\n      image: movie.image ? movie.image : \"\",\n      capacity: capacity,\n      rating: movie.rating ? movie.rating : \"\",\n      genres: movie.genres ? movie.genres : {},\n      showingStatus: showingStatus,\n      theater: screenNumber,\n      timing: timeSlot,\n      price: price\n    };\n    console.log(movieData, \"drtfygughgjhgjhg\");\n    addMovieHandler(movieData);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        width: \"500px\",\n        marginLeft: \"90px\"\n      },\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"IMDB id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"id\",\n          value: props.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.title,\n          type: \"text\",\n          id: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tagline\",\n          children: \"Tagline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.tagline,\n          type: \"text\",\n          id: \"tagline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"plot\",\n          children: \"plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: movie.plot,\n          rows: \"5\",\n          id: \"plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.releaseDate,\n          type: \"text\",\n          id: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.duration,\n          type: \"text\",\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUrl\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.image,\n          type: \"text\",\n          id: \"imageUrl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Showing Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"option\",\n            onChange: statusChangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"coming soon\",\n              children: \"coming soon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"now showing\",\n              children: \"now showing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), showingStatus === \"now showing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"capacity\",\n          children: \"Seat Capacity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"capacity\",\n          value: capacity,\n          onChange: capacityChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), !capacityIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"seat capacity must be between 30 and 60\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), \" \", showingStatus === \"now showing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Showtime Slot\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"option\",\n            onChange: timeSlotChangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"8-11 AM\",\n              children: \"8-11 AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"12-3 PM\",\n              children: \"12-3 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4-7 PM\",\n              children: \"4-7 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"8-11 PM\",\n              children: \"8-11 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), !timeSlotIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Time slot cant be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this), \" \", showingStatus === \"now showing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Screen Number\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"option\",\n            onChange: screenNumberChangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Screen 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Screen 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Screen 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"Screen 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), !screenNumberIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Screen Number cant be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), \" \", showingStatus === \"now showing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ticket Price\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"option\",\n            onChange: priceChangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"$ 10.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"12\",\n              children: \"$ 12.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"15\",\n              children: \"$ 15.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"17\",\n              children: \"$ 17.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), !priceIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Price cant be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes['form-action'],\n        children: [console.log(formIsValid, \"fir,,,\"), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"white\",\n        marginLeft: \"300px\",\n        fontSize: \"35px\"\n      },\n      children: \"Loading ......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddMovie, \"I7oYIf8Xd5leuneY1Hs4TVUhFqk=\");\n\n_c = AddMovie;\nexport default AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/Components/Movies/AddMovie.js"],"names":["React","Fragment","useRef","useCallback","useState","useEffect","classes","useHttp","AddMovie","props","isLoading","setIsLoading","movie","setMovie","showingStatus","setShowingStatus","capacity","setCapacity","screenNumber","setScreenNumber","timeSlot","setTimeSlot","price","setPrice","capacityIsValid","timeSlotIsValid","screenNumberIsValid","priceIsValid","formIsValid","statusChangeHandler","event","target","value","screenNumberChangeHandler","timeSlotChangeHandler","priceChangeHandler","capacityChangeHandler","fetchMoviesHandler","url","id","console","log","response","fetch","ok","Error","data","json","transformedMovies","title","plot","tagline","releaseDate","rating","imDbRating","duration","runtimeStr","image","genres","genreList","error","message","addMovieHandler","method","body","JSON","stringify","headers","addMovie","submitHandler","preventDefault","movieData","name","theater","timing","width","marginLeft","control","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useCallback, useState, useEffect } from 'react';\r\n\r\nimport classes from './AddMovie.module.css';\r\n// import validationClasses from '../UI/FormValidation.module.css';\r\nimport useHttp from '../../hooks/use-Http';\r\n\r\nfunction AddMovie(props) {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    const [showingStatus, setShowingStatus] = useState('coming soon');\r\n    const [capacity, setCapacity] = useState(\"none\");\r\n    const [screenNumber, setScreenNumber] = useState(\"none\");\r\n    const [timeSlot, setTimeSlot] = useState(\"none\");\r\n    const [price, setPrice] = useState(\"none\");\r\n\r\n    const capacityIsValid = showingStatus === 'coming soon' || (capacity > 30 && capacity <= 60);\r\n    const timeSlotIsValid = showingStatus === 'coming soon' || (timeSlot != \"none\");\r\n    const screenNumberIsValid = showingStatus === 'coming soon' || (screenNumber != \"none\");\r\n    const priceIsValid = showingStatus === 'coming soon' || (price != \"none\");\r\n\r\n    let formIsValid = false;\r\n\r\n    if (capacityIsValid && timeSlotIsValid && screenNumberIsValid && priceIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const statusChangeHandler = event => {\r\n        setShowingStatus(event.target.value);\r\n    };\r\n    const screenNumberChangeHandler = event => {\r\n        setScreenNumber(event.target.value);\r\n    };\r\n    const timeSlotChangeHandler = event => {\r\n        setTimeSlot(event.target.value);\r\n    };\r\n\r\n    const priceChangeHandler = event => {\r\n        setPrice(event.target.value);\r\n    };\r\n    const capacityChangeHandler = event => {\r\n        setCapacity(event.target.value);\r\n    };\r\n\r\n    const fetchMoviesHandler = useCallback(async () => {\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            // const url = `https://imdb-api.com/en/API/Title/k_d40xdze4/${props.id}`\r\n            const url = `https://imdb-api.com/en/API/Title/k_2e0orz7h/${props.id}`\r\n            // const url = `https://imdb-api.com/en/API/Title/k_u87040tw/${props.id}`\r\n            console.log(url)\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n\r\n            const transformedMovies =\r\n            {\r\n                id: data.id,\r\n                title: data.title,\r\n                plot: data.plot,\r\n                tagline: data.tagline,\r\n                releaseDate: data.releaseDate,\r\n                rating: data.imDbRating,\r\n                tagline: data.tagline,\r\n                duration: data.runtimeStr,\r\n                image: data.image,\r\n                genres: data.genreList\r\n            };\r\n            console.log(transformedMovies, \"  trans\")\r\n            setMovie(transformedMovies);\r\n\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchMoviesHandler();\r\n    }, [fetchMoviesHandler]);\r\n\r\n    async function addMovieHandler(movie) {\r\n        try {\r\n            const response = await fetch('https://movie-react-16994-default-rtdb.firebaseio.com/movie.json', {\r\n                method: 'POST',\r\n                body: JSON.stringify(movie),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            props.addMovie(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n        // could add validation here...\r\n\r\n        if (!capacityIsValid || !priceIsValid || !screenNumberIsValid || !timeSlotIsValid) {\r\n            return;\r\n        }\r\n\r\n        const movieData = {\r\n            id: props.id,\r\n            name: movie.title,\r\n            tagline: movie.tagline ? movie.tagline : \"\",\r\n            plot: movie.plot ? movie.plot : \"\",\r\n            releaseDate: movie.releaseDate ? movie.releaseDate : \"\",\r\n            duration: movie.duration ? movie.duration : \"\",\r\n            image: movie.image ? movie.image : \"\",\r\n            capacity: capacity,\r\n            rating: movie.rating ? movie.rating : \"\",\r\n            genres: movie.genres ? movie.genres : {},\r\n            showingStatus: showingStatus,\r\n            theater: screenNumber,\r\n            timing: timeSlot,\r\n            price: price\r\n        };\r\n        console.log(movieData, \"drtfygughgjhgjhg\")\r\n        addMovieHandler(movieData)\r\n\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <form style={{ width: \"500px\", marginLeft: \"90px\" }} onSubmit={submitHandler}>\r\n                <div className={classes.control} >\r\n                    <label htmlFor='id'>IMDB id</label>\r\n                    <input type='text' id='id'\r\n                        value={props.id}\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='title'>Title</label>\r\n                    <input value={movie.title} type='text' id='title'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='tagline'>Tagline</label>\r\n                    <input value={movie.tagline} type='text' id='tagline'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='plot'>plot</label>\r\n                    <textarea value={movie.plot} rows='5' id='plot'\r\n                    ></textarea>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='date'>Release Date</label>\r\n                    <input value={movie.releaseDate} type='text' id='date'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='duration'>Duration</label>\r\n                    <input value={movie.duration} type='text' id='duration'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='imageUrl'>Image</label>\r\n                    <input value={movie.image} type='text' id='imageUrl'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Showing Status\r\n                        <select name='option' onChange={statusChangeHandler}>\r\n                            <option value=\"coming soon\">coming soon</option>\r\n                            <option value=\"now showing\">now showing</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                {showingStatus === \"now showing\" &&\r\n                    <div className={classes.control}>\r\n                        <label htmlFor='capacity'>Seat Capacity</label>\r\n                        <input type='number' id='capacity' value={capacity}\r\n                            onChange={capacityChangeHandler}\r\n                        />\r\n                        {!capacityIsValid && (\r\n                            <p className={classes['error-text']}>seat capacity must be between 30 and 60</p>\r\n                        )}\r\n                    </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                    <div className={classes.control}>\r\n                        <label>\r\n                            Showtime Slot\r\n                            <select name='option' onChange={timeSlotChangeHandler}\r\n                            >\r\n                                <option value=\"none\">None</option>\r\n                                <option value='8-11 AM'>8-11 AM</option>\r\n                                <option value='12-3 PM'>12-3 PM</option>\r\n                                <option value='4-7 PM'>4-7 PM</option>\r\n                                <option value='8-11 PM'>8-11 PM</option>\r\n                            </select>\r\n                        </label>\r\n                        {!timeSlotIsValid && (\r\n                            <p className={classes['error-text']}>Time slot cant be empty</p>\r\n                        )}\r\n                    </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                    <div className={classes.control}>\r\n                        <label>\r\n                            Screen Number\r\n                            <select name='option' onChange={screenNumberChangeHandler}\r\n                            >\r\n                                <option value=\"none\">None</option>\r\n                                <option value='1'>Screen 1</option>\r\n                                <option value='2'>Screen 2</option>\r\n                                <option value='3'>Screen 3</option>\r\n                                <option value='4'>Screen 4</option>\r\n                            </select>\r\n                        </label>\r\n                        {!screenNumberIsValid && (\r\n                            <p className={classes['error-text']}>Screen Number cant be empty</p>\r\n                        )}\r\n                    </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                    <div className={classes.control}>\r\n                        <label>\r\n                            Ticket Price\r\n                            <select name='option' onChange={priceChangeHandler}\r\n                            >\r\n                                <option value=\"none\">None</option>\r\n                                <option value='10'>$ 10.00</option>\r\n                                <option value='12'>$ 12.00</option>\r\n                                <option value='15'>$ 15.00</option>\r\n                                <option value='17'>$ 17.00</option>\r\n                            </select>\r\n                        </label>\r\n                        {!priceIsValid && (\r\n                            <p className={classes['error-text']}>Price cant be empty</p>\r\n                        )}\r\n                    </div>\r\n                }\r\n\r\n                <div className={classes['form-action']}>\r\n                    {console.log(formIsValid, \"fir,,,\")}\r\n                    <button\r\n                        disabled={!formIsValid}\r\n                    >Submit</button>\r\n                </div>\r\n            </form>\r\n            {isLoading && <p style={{ color: \"white\", marginLeft: \"300px\", fontSize: \"35px\" }}>Loading ......</p>}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}