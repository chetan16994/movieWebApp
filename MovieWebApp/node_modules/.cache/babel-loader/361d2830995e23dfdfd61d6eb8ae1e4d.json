{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\Components\\\\Movies\\\\AddMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef, useCallback, useState, useEffect } from 'react';\nimport classes from './AddMovie.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddMovie(props) {\n  _s();\n\n  const titleRef = useRef('');\n  const idRef = useRef('');\n  const releaseDateRef = useRef('');\n  const taglineRef = useRef('');\n  const plotRef = useRef('');\n  const durationRef = useRef('');\n  const imageRef = useRef('');\n  const capacityRef = useRef('');\n  const genreRef = useRef('');\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); // const temp = \"tt12263384\";\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // console.log(idRef.current.value)\n      const url = `https://imdb-api.com/en/API/Title/k_2e0orz7h/${idRef.current.value}`;\n      console.log(url);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      console.log(data, \" --- hiuijo\");\n      console.log(data.title);\n      console.log(data.releaseDate);\n      console.log(data.plot);\n      console.log(data.imDbRating);\n      console.log(data.genres);\n      console.log(data.genreList);\n      data.genreList.forEach(element => {\n        console.log(element.value);\n      });\n      console.log(data.errorMessage);\n      const transformedMovies = {\n        id: data.id,\n        title: data.title,\n        plot: data.plot,\n        tagline: data.tagline,\n        releaseDate: data.releaseDate,\n        rating: data.imDbRating,\n        nowShowing: 'true',\n        tagline: data.tagline,\n        duration: data.runtimeStr,\n        image: data.image,\n        genres: data.genreList // ratingVotes: data.imDbRatingVotes\n\n      };\n      setMovie(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    console.log(movie);\n    const response = await fetch('https://movie-react-16994-default-rtdb.firebaseio.com/movie.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  ;\n\n  function submitHandler(event) {\n    event.preventDefault(); // could add validation here...\n\n    const movieData = {\n      id: idRef.current.value,\n      title: titleRef.current.value,\n      tagline: taglineRef.current.value,\n      plot: plotRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n      // genre: genreRef.current.value,\n      duration: durationRef.current.value,\n      image: imageRef.current.value,\n      capacity: capacityRef.current.value,\n      genres: movie.genres\n    }; // console.log(movie.genres)\n    // console.log(movieData.genres)\n    // props.onAddMovie(movie);\n\n    addMovieHandler(movieData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: \"90px\",\n        marginTop: \"25px\"\n      },\n      onClick: fetchMoviesHandler,\n      children: \"Fetch Data from Api\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        width: \"500px\",\n        marginLeft: \"90px\"\n      },\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"IMDB id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"id\",\n          ref: idRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.title,\n          type: \"text\",\n          id: \"title\",\n          ref: titleRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tagline\",\n          children: \"Tagline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.tagline,\n          type: \"text\",\n          id: \"tagline\",\n          ref: taglineRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"plot\",\n          children: \"plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: movie.plot,\n          rows: \"5\",\n          id: \"plot\",\n          ref: plotRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.releaseDate,\n          type: \"text\",\n          id: \"date\",\n          ref: releaseDateRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.duration,\n          type: \"text\",\n          id: \"duration\",\n          ref: durationRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUrl\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: movie.image,\n          type: \"text\",\n          id: \"imageUrl\",\n          ref: imageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"capacity\",\n          children: \"Seat Capacity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"capacity\",\n          ref: capacityRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddMovie, \"tbizMAPXGRdW+ObuRJktRdDXCzM=\");\n\n_c = AddMovie;\nexport default AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/Components/Movies/AddMovie.js"],"names":["React","Fragment","useRef","useCallback","useState","useEffect","classes","AddMovie","props","titleRef","idRef","releaseDateRef","taglineRef","plotRef","durationRef","imageRef","capacityRef","genreRef","movie","setMovie","isLoading","setIsLoading","error","setError","fetchMoviesHandler","url","current","value","console","log","response","fetch","ok","Error","data","json","title","releaseDate","plot","imDbRating","genres","genreList","forEach","element","errorMessage","transformedMovies","id","tagline","rating","nowShowing","duration","runtimeStr","image","message","addMovieHandler","method","body","JSON","stringify","headers","submitHandler","event","preventDefault","movieData","capacity","marginLeft","marginTop","width","control"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useCallback, useState, useEffect } from 'react';\r\n\r\nimport classes from './AddMovie.module.css';\r\n\r\nfunction AddMovie(props) {\r\n    const titleRef = useRef('');\r\n    const idRef = useRef('');\r\n    const releaseDateRef = useRef('');\r\n    const taglineRef = useRef('');\r\n    const plotRef = useRef('');\r\n    const durationRef = useRef('');\r\n    const imageRef = useRef('');\r\n    const capacityRef = useRef('');\r\n    const genreRef = useRef('');\r\n\r\n    const [movie, setMovie] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // const temp = \"tt12263384\";\r\n\r\n    const fetchMoviesHandler = useCallback(async () => {\r\n\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            // console.log(idRef.current.value)\r\n            const url = `https://imdb-api.com/en/API/Title/k_2e0orz7h/${idRef.current.value}`\r\n            console.log(url)\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            console.log(data, \" --- hiuijo\")\r\n            console.log(data.title);\r\n            console.log(data.releaseDate);\r\n            console.log(data.plot);\r\n            console.log(data.imDbRating);\r\n            console.log(data.genres);\r\n            console.log(data.genreList);\r\n\r\n            data.genreList.forEach(element => {\r\n                console.log(element.value)\r\n            });\r\n            console.log(data.errorMessage)\r\n\r\n            const transformedMovies =\r\n            {\r\n                id: data.id,\r\n                title: data.title,\r\n                plot: data.plot,\r\n                tagline: data.tagline,\r\n                releaseDate: data.releaseDate,\r\n                rating: data.imDbRating,\r\n                nowShowing: 'true',\r\n                tagline: data.tagline,\r\n                duration: data.runtimeStr,\r\n                image: data.image,\r\n                genres:data.genreList\r\n\r\n                // ratingVotes: data.imDbRatingVotes\r\n            };\r\n\r\n            setMovie(transformedMovies);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchMoviesHandler();\r\n    }, [fetchMoviesHandler]);\r\n\r\n    async function addMovieHandler(movie) {\r\n        console.log(movie);\r\n        const response = await fetch('https://movie-react-16994-default-rtdb.firebaseio.com/movie.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify(movie),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n    };\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        // could add validation here...\r\n\r\n        const movieData = {\r\n            id: idRef.current.value,\r\n            title: titleRef.current.value,\r\n            tagline: taglineRef.current.value,\r\n            plot: plotRef.current.value,\r\n            releaseDate: releaseDateRef.current.value,\r\n            // genre: genreRef.current.value,\r\n            duration: durationRef.current.value,\r\n            image: imageRef.current.value,\r\n            capacity: capacityRef.current.value,\r\n            genres:movie.genres\r\n        };\r\n        // console.log(movie.genres)\r\n        // console.log(movieData.genres)\r\n        // props.onAddMovie(movie);\r\n\r\n        addMovieHandler(movieData)\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button style={{ marginLeft: \"90px\", marginTop: \"25px\" }} onClick={fetchMoviesHandler}>Fetch Data from Api</button>\r\n            <form style={{ width: \"500px\", marginLeft: \"90px\" }} onSubmit={submitHandler}>\r\n                <div className={classes.control} >\r\n                    <label htmlFor='id'>IMDB id</label>\r\n                    <input type='text' id='id' ref={idRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='title'>Title</label>\r\n                    <input value={movie.title} type='text' id='title' ref={titleRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='tagline'>Tagline</label>\r\n                    <input value={movie.tagline} type='text' id='tagline' ref={taglineRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='plot'>plot</label>\r\n                    <textarea value={movie.plot} rows='5' id='plot' ref={plotRef}></textarea>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='date'>Release Date</label>\r\n                    <input value={movie.releaseDate} type='text' id='date' ref={releaseDateRef} />\r\n                </div>               \r\n                <div className={classes.control}>\r\n                    <label htmlFor='duration'>Duration</label>\r\n                    <input value={movie.duration} type='text' id='duration' ref={durationRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='imageUrl'>Image</label>\r\n                    <input value={movie.image} type='text' id='imageUrl' ref={imageRef} />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='capacity'>Seat Capacity</label>\r\n                    <input type='number' id='capacity' ref={capacityRef} />\r\n                </div>\r\n                {/* <div className={classes.control}>\r\n                    <label>\r\n                        Showing Status\r\n                        <select >\r\n                            <option value=\"true\">True</option>\r\n                            <option value=\"false\">False</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Showtime Slot\r\n                        <select >\r\n                            <option >Null</option>\r\n                            <option value='8-11 AM'>8-11 AM</option>\r\n                            <option value='12-3 PM'>12-3 PM</option>\r\n                            <option value='4-7 PM'>4-7 PM</option>\r\n                            <option value='8-11 PM'>8-11 PM</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Screen Number\r\n                        <select >\r\n                            <option >Null</option>\r\n                            <option value='1'>Screen 1</option>\r\n                            <option value='2'>Screen 2</option>\r\n                            <option value='3'>Screen 3</option>\r\n                            <option value='4'>Screen 4</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Ticket Price\r\n                        <select >\r\n                            <option >Null</option>\r\n                            <option value='10'>$ 10.00</option>\r\n                            <option value='12'>$ 12.00</option>\r\n                            <option value='15'>$ 15.00</option>\r\n                            <option value='17'>$ 17.00</option>\r\n                        </select>\r\n                    </label>\r\n                </div> */}\r\n\r\n                <button>Add Movie</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}