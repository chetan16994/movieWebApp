{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\Components\\\\Movies\\\\AddID.js\";\nimport { useState, Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddID = props => {\n  // const [imdbID,setimdbID]= useState('');\n  const idSubmitHandler = event => {\n    console.log(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: idSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"IMDB id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"id\",\n          ref: idRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"submit ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AddID;\nexport default AddID;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddID\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/Components/Movies/AddID.js"],"names":["useState","Fragment","AddID","props","idSubmitHandler","event","console","log","target","value","classes","control","idRef"],"mappings":";AAAA,SAASA,QAAT,EAAoBC,QAApB,QAAmC,OAAnC;;;AACA,MAAMC,KAAK,GAAEC,KAAK,IAAE;AAChB;AACA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AAEH,GAHD;;AAIA,sBACI,QAAC,QAAD;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAKL,eAAnB;AAAA,8BACQ;AAAK,QAAA,SAAS,EAAEM,OAAO,CAACC,OAAxB;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,IAAtB;AAA2B,UAAA,GAAG,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjBD;;KAAMV,K;AAmBN,eAAeA,KAAf","sourcesContent":["import { useState , Fragment} from \"react\";\r\nconst AddID =props=>{\r\n    // const [imdbID,setimdbID]= useState('');\r\n    const idSubmitHandler = (event) => {\r\n        console.log(event.target.value);\r\n                \r\n    }\r\n    return(\r\n        <Fragment>\r\n        <form onSubmit = { idSubmitHandler } >\r\n                <div className={classes.control} >\r\n                    <label htmlFor='id'>IMDB id</label>\r\n                    <input type='text' id='id' ref={idRef} />\r\n                </div>\r\n                <button>submit ID</button>\r\n        </form >\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AddID;"]},"metadata":{},"sourceType":"module"}