{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\Components\\\\Movies\\\\SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, Fragment, useEffect } from \"react\";\nimport ShowSearchedMovies from \"./ShowSearchedMovies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchMovie = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [succes, setSuccess] = useState(false);\n  const searchMovieFetch = useCallback(async () => {\n    try {\n      // console.log(idRef.current.value)\n      const movieName = \"oxygen\";\n      const url = `https://imdb-api.com/en/API/SearchMovie/k_d40xdze4/${movieName}`;\n      console.log(url);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      console.log(data.results);\n      setMovies(data.results);\n      set;\n    } catch (error) {// setError(error.message);\n    }\n  }, []);\n\n  const searchMovieHandler = event => {\n    event.preventDefault();\n    searchMovieFetch();\n  };\n\n  useEffect(() => {\n    searchMovieFetch();\n  }, [searchMovieFetch]);\n\n  const titleChangeHandler = event => {\n    event.preventDefault();\n    setTitle(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchMovieHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Search Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), movies.length != 0 && /*#__PURE__*/_jsxDEV(ShowSearchedMovies, {\n      results: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchMovie, \"uuQ8FzB3INuow6n7WNv47pvFVHA=\");\n\n_c = SearchMovie;\nexport default SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/Components/Movies/SearchMovie.js"],"names":["useCallback","useState","Fragment","useEffect","ShowSearchedMovies","SearchMovie","title","setTitle","movies","setMovies","succes","setSuccess","searchMovieFetch","movieName","url","console","log","response","fetch","ok","Error","data","json","results","set","error","searchMovieHandler","event","preventDefault","titleChangeHandler","target","value","length"],"mappings":";;;AAAA,SAASA,WAAT,EAAqBC,QAArB,EAA+BC,QAA/B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AACA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAK,CAACS,MAAD,EAAQC,UAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAMW,gBAAgB,GAAGZ,WAAW,CAAC,YAAY;AAE7C,QAAI;AACA;AACA,YAAMa,SAAS,GAAG,QAAlB;AACA,YAAMC,GAAG,GAAI,sDAAqDD,SAAU,EAA5E;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA5B;;AACA,UAAI,CAACG,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACE,OAAjB;AACAd,MAAAA,SAAS,CAACY,IAAI,CAACE,OAAN,CAAT;AACAC,MAAAA,GAAG;AAEN,KAdD,CAcE,OAAOC,KAAP,EAAc,CACZ;AACH;AACJ,GAnBmC,EAmBjC,EAnBiC,CAApC;;AAqBA,QAAMC,kBAAkB,GAAEC,KAAK,IAAG;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAhB,IAAAA,gBAAgB;AACnB,GAHD;;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;;AAIA,QAAMiB,kBAAkB,GAAGF,KAAK,IAAG;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACArB,IAAAA,QAAQ,CAACoB,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAR;AACH,GAHD;;AAKA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEL,kBAAhB;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,OAAtB;AAA8B,UAAA,KAAK,EAAEpB,KAArC;AAA4C,UAAA,QAAQ,EAAEuB;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKrB,MAAM,CAACwB,MAAP,IAAe,CAAf,iBAAoB,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAExB;AAA7B;AAAA;AAAA;AAAA;AAAA,YARzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApDD;;GAAMH,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import { useCallback,useState, Fragment,useEffect } from \"react\";\r\nimport ShowSearchedMovies from \"./ShowSearchedMovies\";\r\nconst SearchMovie = () =>{\r\n\r\n    const [title, setTitle]=useState('');\r\n    const [movies,setMovies]=useState([]);\r\n    const[succes,setSuccess]=useState(false);\r\n    const searchMovieFetch = useCallback(async () => {\r\n\r\n        try {\r\n            // console.log(idRef.current.value)\r\n            const movieName = \"oxygen\"\r\n            const url = `https://imdb-api.com/en/API/SearchMovie/k_d40xdze4/${movieName}`\r\n            console.log(url)\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            console.log(data.results);\r\n            setMovies(data.results);\r\n            set\r\n\r\n        } catch (error) {\r\n            // setError(error.message);\r\n        }\r\n    }, []);\r\n\r\n    const searchMovieHandler= event =>{\r\n        event.preventDefault();\r\n        searchMovieFetch();\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchMovieFetch();\r\n    }, [searchMovieFetch]);\r\n\r\n    const titleChangeHandler = event =>{\r\n        event.preventDefault();\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={searchMovieHandler}>\r\n                <div>\r\n                    <label htmlFor='title'>Movie title</label>\r\n                    <input type='text' id='title' value={title} onChange={titleChangeHandler} />\r\n                </div>\r\n                <button>Search Movie</button>\r\n            </form>\r\n            {movies.length!=0 && <ShowSearchedMovies results={movies}/>}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default SearchMovie;"]},"metadata":{},"sourceType":"module"}