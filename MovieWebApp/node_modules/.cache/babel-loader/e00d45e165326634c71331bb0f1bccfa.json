{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\Components\\\\Movies\\\\SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, Fragment, useEffect, useRef } from \"react\";\nimport ShowSearchedMovies from \"./ShowSearchedMovies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchMovie = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const titleRef = useRef('');\n  const searchMovieFetch = useCallback(async () => {\n    try {\n      const movieName = titleRef.current.value;\n      const url = // \"\"\n      //  `https://imdb-api.com/en/API/SearchMovie/k_d40xdze4/${movieName}`\n      `https://imdb-api.com/en/API/SearchMovie/k_2e0orz7h/${movieName}`;\n      console.log(url);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      setMovies(data.results);\n    } catch (error) {\n      setSuccess(false);\n    }\n  }, []);\n\n  const searchMovieHandler = event => {\n    event.preventDefault();\n    searchMovieFetch();\n  };\n\n  useEffect(() => {\n    searchMovieFetch();\n  }, [searchMovieFetch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchMovieHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          style: {\n            color: \"white\",\n            marginLeft: \"100px\",\n            fontSize: \"45px\",\n            marginBottom: \"250px\",\n            marginTop: \"250px\"\n          },\n          children: \"Movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginLeft: \"100px\"\n          },\n          type: \"text\",\n          id: \"title\",\n          ref: titleRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"100px\"\n        },\n        children: \"Search Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), movies && /*#__PURE__*/_jsxDEV(ShowSearchedMovies, {\n      results: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchMovie, \"Qh3WG+7BpaKRomOnU2FsIHFH3tQ=\");\n\n_c = SearchMovie;\nexport default SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/Components/Movies/SearchMovie.js"],"names":["useCallback","useState","Fragment","useEffect","useRef","ShowSearchedMovies","SearchMovie","movies","setMovies","titleRef","searchMovieFetch","movieName","current","value","url","console","log","response","fetch","ok","Error","data","json","results","error","setSuccess","searchMovieHandler","event","preventDefault","color","marginLeft","fontSize","marginBottom","marginTop"],"mappings":";;;AAAA,SAASA,WAAT,EAAqBC,QAArB,EAA+BC,QAA/B,EAAwCC,SAAxC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AACA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AAErB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMQ,QAAQ,GAAGL,MAAM,CAAC,EAAD,CAAvB;AAEA,QAAMM,gBAAgB,GAAGV,WAAW,CAAC,YAAY;AAE7C,QAAI;AACA,YAAMW,SAAS,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,KAAnC;AACA,YAAMC,GAAG,GACT;AACA;AACE,4DAAqDH,SAAU,EAHjE;AAKAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA5B;;AACA,UAAI,CAACG,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAd,MAAAA,SAAS,CAACa,IAAI,CAACE,OAAN,CAAT;AAEH,KAfD,CAeE,OAAOC,KAAP,EAAc;AACZC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GApBmC,EAoBjC,EApBiC,CAApC;;AAsBA,QAAMC,kBAAkB,GAAEC,KAAK,IAAG;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAlB,IAAAA,gBAAgB;AACnB,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEgB,kBAAhB;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAuB,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,UAAU,EAAE,OAA9B;AAAuCC,YAAAA,QAAQ,EAAC,MAAhD;AAAwDC,YAAAA,YAAY,EAAC,OAArE;AAA8EC,YAAAA,SAAS,EAAC;AAAxF,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,KAAK,EAAE;AAAEH,YAAAA,UAAU,EAAE;AAAd,WAAd;AAAuC,UAAA,IAAI,EAAC,MAA5C;AAAmD,UAAA,EAAE,EAAC,OAAtD;AAA8D,UAAA,GAAG,EAAErB;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAQ,QAAA,KAAK,EAAE;AAAEqB,UAAAA,UAAU,EAAE;AAAd,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASKvB,MAAM,iBAAI,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,YATf;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlDD;;GAAMD,W;;KAAAA,W;AAoDN,eAAeA,WAAf","sourcesContent":["import { useCallback,useState, Fragment,useEffect,useRef } from \"react\";\r\nimport ShowSearchedMovies from \"./ShowSearchedMovies\";\r\nconst SearchMovie = () =>{\r\n\r\n    const [movies,setMovies]=useState([]);\r\n\r\n    const titleRef = useRef('');\r\n\r\n    const searchMovieFetch = useCallback(async () => {\r\n\r\n        try {\r\n            const movieName = titleRef.current.value\r\n            const url =\r\n            // \"\"\r\n            //  `https://imdb-api.com/en/API/SearchMovie/k_d40xdze4/${movieName}`\r\n             `https://imdb-api.com/en/API/SearchMovie/k_2e0orz7h/${movieName}`\r\n            \r\n            console.log(url)\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();         \r\n            setMovies(data.results);\r\n\r\n        } catch (error) {\r\n            setSuccess(false);\r\n        }\r\n    }, []);\r\n\r\n    const searchMovieHandler= event =>{\r\n        event.preventDefault();\r\n        searchMovieFetch();\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchMovieFetch();\r\n    }, [searchMovieFetch]);\r\n\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={searchMovieHandler}>\r\n                <div>\r\n                    <label htmlFor='title' style={{ color: \"white\", marginLeft: \"100px\", fontSize:\"45px\" ,marginBottom:\"250px\", marginTop:\"250px\"}}>Movie title</label>\r\n                    <br/>\r\n                    <input style={{ marginLeft: \"100px\" }} type='text' id='title' ref={titleRef} />\r\n                </div>\r\n                <button style={{ marginLeft: \"100px\", }}>Search Movie</button>\r\n            </form>\r\n            {movies && <ShowSearchedMovies results={movies}/>}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default SearchMovie;"]},"metadata":{},"sourceType":"module"}