{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\docsa\\\\OneDrive\\\\Desktop\\\\movieWebApp\\\\MovieWebApp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  // if (action.type === 'ADD') {\n  //     const updatedTotalAmount =\n  //         state.totalAmount + action.item.price * action.item.amount;\n  //     const existingCartItemIndex = state.items.findIndex(\n  //         (item) => item.id === action.item.id\n  //     );\n  //     const existingCartItem = state.items[existingCartItemIndex];\n  //     let updatedItems;\n  //     if (existingCartItem) {\n  //         const updatedItem = {\n  //             ...existingCartItem,\n  //             amount: existingCartItem.amount + action.item.amount,\n  //         };\n  //         updatedItems = [...state.items];\n  //         updatedItems[existingCartItemIndex] = updatedItem;\n  //     } else {\n  //         updatedItems = state.items.concat(action.item);\n  //     }\n  //     return {\n  //         items: updatedItems,\n  //         totalAmount: updatedTotalAmount,\n  //     };\n  // }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState); // const addItemToCartHandler = (item) => {\n  //     dispatchCartAction({ type: 'ADD', item: item });\n  // };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    // addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/docsa/OneDrive/Desktop/movieWebApp/MovieWebApp/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingItem","updatedTotalAmount","price","updatedItems","amount","filter","updatedItem","CartProvider","props","cartState","dispatchCartAction","removeItemFromCartHandler","cartContext","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,UAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CACzBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EADH,CAA9B;AAGA,UAAMC,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAArB;AACA,UAAMK,kBAAkB,GAAGR,KAAK,CAACF,WAAN,GAAoBS,YAAY,CAACE,KAA5D;AACA,QAAIC,YAAJ;;AACA,QAAIH,YAAY,CAACI,MAAb,KAAwB,CAA5B,EAA+B;AAC3BD,MAAAA,YAAY,GAAGV,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAA9C,CAAf;AACH,KAFD,MAEO;AACH,YAAMO,WAAW,GAAG,EAAE,GAAGN,YAAL;AAAmBI,QAAAA,MAAM,EAAEJ,YAAY,CAACI,MAAb,GAAsB;AAAjD,OAApB;AACAD,MAAAA,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACH,KAAV,CAAf;AACAa,MAAAA,YAAY,CAACP,qBAAD,CAAZ,GAAsCU,WAAtC;AACH;;AAED,WAAO;AACHhB,MAAAA,KAAK,EAAEa,YADJ;AAEHZ,MAAAA,WAAW,EAAEU;AAFV,KAAP;AAIH;;AAED,SAAOZ,gBAAP;AACH,CAjDD;;AAmDA,MAAMkB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD,CAD4B,CAG5B;AACA;AACA;;AAEA,QAAMsB,yBAAyB,GAAIZ,EAAD,IAAQ;AACtCW,IAAAA,kBAAkB,CAAC;AAAEf,MAAAA,IAAI,EAAE,QAAR;AAAkBI,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMa,WAAW,GAAG;AAChBtB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADD;AAEhBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFP;AAGhB;AACAsB,IAAAA,UAAU,EAAEF;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKJ,KAAK,CAACM;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMP,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    // if (action.type === 'ADD') {\r\n    //     const updatedTotalAmount =\r\n    //         state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    //     const existingCartItemIndex = state.items.findIndex(\r\n    //         (item) => item.id === action.item.id\r\n    //     );\r\n    //     const existingCartItem = state.items[existingCartItemIndex];\r\n    //     let updatedItems;\r\n\r\n    //     if (existingCartItem) {\r\n    //         const updatedItem = {\r\n    //             ...existingCartItem,\r\n    //             amount: existingCartItem.amount + action.item.amount,\r\n    //         };\r\n    //         updatedItems = [...state.items];\r\n    //         updatedItems[existingCartItemIndex] = updatedItem;\r\n    //     } else {\r\n    //         updatedItems = state.items.concat(action.item);\r\n    //     }\r\n\r\n    //     return {\r\n    //         items: updatedItems,\r\n    //         totalAmount: updatedTotalAmount,\r\n    //     };\r\n    // }\r\n    if (action.type === 'REMOVE') {\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.id\r\n        );\r\n        const existingItem = state.items[existingCartItemIndex];\r\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n        let updatedItems;\r\n        if (existingItem.amount === 1) {\r\n            updatedItems = state.items.filter(item => item.id !== action.id);\r\n        } else {\r\n            const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    // const addItemToCartHandler = (item) => {\r\n    //     dispatchCartAction({ type: 'ADD', item: item });\r\n    // };\r\n\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id });\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        // addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}