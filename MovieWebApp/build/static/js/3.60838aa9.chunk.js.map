{"version":3,"sources":["Components/Movies/AddMovie.module.css","Components/Movies/ShowSearchedMovie.js","Components/Movies/AddMovie.js","Components/Movies/ShowSearchedMovies.js","Components/Movies/SearchMovie.js"],"names":["module","exports","ShowSearchedMovie","props","style","color","marginLeft","alignContent","title","description","height","width","src","image","alt","onClick","addMovie","imdbId","id","marginBottom","marginTop","borderRadius","AddMovie","dispatch","useDispatch","navigate","useNavigate","useState","isLoading","setIsLoading","movie","setMovie","showingStatus","setShowingStatus","capacity","setCapacity","screenNumber","setScreenNumber","timeSlot","setTimeSlot","price","setPrice","capacityIsValid","timeSlotIsValid","screenNumberIsValid","priceIsValid","formIsValid","fetchMoviesHandler","useCallback","a","url","fetch","response","ok","Error","json","data","plot","tagline","releaseDate","rating","imDbRating","runtimeStr","genreList","console","log","message","useEffect","onSubmit","event","preventDefault","movieData","name","duration","genres","theater","timing","sendMovieData","className","classes","control","htmlFor","type","value","rows","onChange","target","disabled","fontSize","ShowSearchedMovies","setAddMovie","setimdbId","results","map","SearchMovie","movies","setMovies","titleRef","useRef","error","setError","searchMovieFetch","movieName","current","content","ref"],"mappings":"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","file":"static/js/3.60838aa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__2Xqg5\",\"error-text\":\"AddMovie_error-text__1lYfI\",\"form-actions\":\"AddMovie_form-actions__3j2mb\"};","import { useState, Fragment } from 'react';\r\n\r\nconst ShowSearchedMovie = props => {\r\n\r\n    const ClickHandler = () => {\r\n        props.addMovie(true)\r\n        props.imdbId(props.id)\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div >\r\n                <li>\r\n                    <p style={{ color: \"white\", marginLeft: \"20px\", alignContent: \"center\" }}>{props.title}</p>\r\n                    <p style={{ color: \"white\", marginLeft: \"20px\", alignContent: \"center\" }}>{props.description}</p>\r\n                    <img\r\n                        style={{ height: \"280px\", width: \"241px\" }}\r\n                        src={props.image} alt=\"\" />\r\n                    <br />\r\n                    <button onClick={ClickHandler} style={{ width: \"100px\", marginLeft: \"60px\", marginBottom: \"30px\", marginTop: \"20px\" ,borderRadius:\"20px\"}}>Add</button>\r\n                </li>\r\n            </div >\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ShowSearchedMovie;","import React, { Fragment, useRef, useCallback, useState, useEffect } from 'react';\r\nimport classes from './AddMovie.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendMovieData } from '../../store/movies-action';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n// import validationClasses from '../UI/FormValidation.module.css';\r\n\r\nfunction AddMovie(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate =useNavigate();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    const [showingStatus, setShowingStatus] = useState('coming soon');\r\n    const [capacity, setCapacity] = useState(\"none\");\r\n    const [screenNumber, setScreenNumber] = useState(\"none\");\r\n    const [timeSlot, setTimeSlot] = useState(\"none\");\r\n    const [price, setPrice] = useState(\"none\");\r\n\r\n    const capacityIsValid = showingStatus === 'coming soon' || (capacity > 30 && capacity <= 60);\r\n    const timeSlotIsValid = showingStatus === 'coming soon' || (timeSlot != \"none\");\r\n    const screenNumberIsValid = showingStatus === 'coming soon' || (screenNumber != \"none\");\r\n    const priceIsValid = showingStatus === 'coming soon' || (price != \"none\");\r\n\r\n    let formIsValid = false;\r\n\r\n    if (capacityIsValid && timeSlotIsValid && screenNumberIsValid && priceIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const statusChangeHandler = event => {\r\n        setShowingStatus(event.target.value);\r\n    };\r\n    const screenNumberChangeHandler = event => {\r\n        setScreenNumber(event.target.value);\r\n    };\r\n    const timeSlotChangeHandler = event => {\r\n        setTimeSlot(event.target.value);\r\n    };\r\n\r\n    const priceChangeHandler = event => {\r\n        setPrice(event.target.value);\r\n    };\r\n    const capacityChangeHandler = event => {\r\n        setCapacity(event.target.value);\r\n    };\r\n\r\n    const fetchMoviesHandler = useCallback(async () => {\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            // const url = `https://imdb-api.com/en/API/Title/k_d40xdze4/${props.id}`\r\n            const url = `https://imdb-api.com/en/API/Title/k_2e0orz7h/${props.id}`\r\n            // const url = `https://imdb-api.com/en/API/Title/k_u87040tw/${props.id}`\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n\r\n            const transformedMovies =\r\n            {\r\n                id: data.id,\r\n                title: data.title,\r\n                plot: data.plot,\r\n                tagline: data.tagline,\r\n                releaseDate: data.releaseDate,\r\n                rating: data.imDbRating,\r\n                tagline: data.tagline,\r\n                duration: data.runtimeStr,\r\n                image: data.image,\r\n                genres: data.genreList\r\n            };\r\n\r\n            setMovie(transformedMovies);\r\n\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchMoviesHandler();\r\n    }, [fetchMoviesHandler]);\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (!capacityIsValid || !priceIsValid || !screenNumberIsValid || !timeSlotIsValid) {\r\n            return;\r\n        }\r\n\r\n        const movieData = {\r\n            id: props.id,\r\n            name: movie.title,\r\n            tagline: movie.tagline ? movie.tagline : \"\",\r\n            plot: movie.plot ? movie.plot : \"\",\r\n            releaseDate: movie.releaseDate ? movie.releaseDate : \"\",\r\n            duration: movie.duration ? movie.duration : \"\",\r\n            image: movie.image ? movie.image : \"\",\r\n            capacity: capacity,\r\n            rating: movie.rating ? movie.rating : \"\",\r\n            genres: movie.genres ? movie.genres : {},\r\n            showingStatus: showingStatus,\r\n            theater: screenNumber,\r\n            timing: timeSlot,\r\n            price: price\r\n        };\r\n        \r\n        dispatch(sendMovieData(movieData));\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <form style={{ width: \"500px\", marginLeft: \"90px\" }} onSubmit={submitHandler}>\r\n                <div className={classes.control} >\r\n                    <label htmlFor='id'>IMDB id</label>\r\n                    <input type='text' id='id'\r\n                        value={props.id}\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='title'>Title</label>\r\n                    <input value={movie.title} type='text' id='title'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='tagline'>Tagline</label>\r\n                    <input value={movie.tagline} type='text' id='tagline'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='plot'>plot</label>\r\n                    <textarea value={movie.plot} rows='5' id='plot'\r\n                    ></textarea>\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='date'>Release Date</label>\r\n                    <input value={movie.releaseDate} type='text' id='date'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='duration'>Duration</label>\r\n                    <input value={movie.duration} type='text' id='duration'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label htmlFor='imageUrl'>Image</label>\r\n                    <input value={movie.image} type='text' id='imageUrl'\r\n                    />\r\n                </div>\r\n                <div className={classes.control}>\r\n                    <label>\r\n                        Showing Status\r\n                        <select name='option' onChange={statusChangeHandler}>\r\n                            <option value=\"coming soon\">coming soon</option>\r\n                            <option value=\"now showing\">now showing</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                {showingStatus === \"now showing\" &&\r\n                    <div className={classes.control}>\r\n                        <label htmlFor='capacity'>Seat Capacity</label>\r\n                        <input type='number' id='capacity' value={capacity}\r\n                            onChange={capacityChangeHandler}\r\n                        />\r\n                        {!capacityIsValid && (\r\n                            <p className={classes['error-text']}>seat capacity must be between 30 and 60</p>\r\n                        )}\r\n                    </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                    <div className={classes.control}>\r\n                        <label>\r\n                            Showtime Slot\r\n                            <select name='option' onChange={timeSlotChangeHandler}\r\n                            >\r\n                                <option value=\"none\">None</option>\r\n                                <option value='8-11 AM'>8-11 AM</option>\r\n                                <option value='12-3 PM'>12-3 PM</option>\r\n                                <option value='4-7 PM'>4-7 PM</option>\r\n                                <option value='8-11 PM'>8-11 PM</option>\r\n                            </select>\r\n                        </label>\r\n                        {!timeSlotIsValid && (\r\n                            <p className={classes['error-text']}>Time slot cant be empty</p>\r\n                        )}\r\n                    </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                    <div className={classes.control}>\r\n                        <label>\r\n                            Screen Number\r\n                            <select name='option' onChange={screenNumberChangeHandler}\r\n                            >\r\n                                <option value=\"none\">None</option>\r\n                                <option value='1'>Screen 1</option>\r\n                                <option value='2'>Screen 2</option>\r\n                                <option value='3'>Screen 3</option>\r\n                                <option value='4'>Screen 4</option>\r\n                            </select>\r\n                        </label>\r\n                        {!screenNumberIsValid && (\r\n                            <p className={classes['error-text']}>Screen Number cant be empty</p>\r\n                        )}\r\n                    </div>\r\n                } {showingStatus === \"now showing\" &&\r\n                    <div className={classes.control}>\r\n                        <label>\r\n                            Ticket Price\r\n                            <select name='option' onChange={priceChangeHandler}\r\n                            >\r\n                                <option value=\"none\">None</option>\r\n                                <option value='10'>$ 10.00</option>\r\n                                <option value='12'>$ 12.00</option>\r\n                                <option value='15'>$ 15.00</option>\r\n                                <option value='17'>$ 17.00</option>\r\n                            </select>\r\n                        </label>\r\n                        {!priceIsValid && (\r\n                            <p className={classes['error-text']}>Price cant be empty</p>\r\n                        )}\r\n                    </div>\r\n                }\r\n\r\n                <div className={classes['form-action']}>\r\n                    <button\r\n                        disabled={!formIsValid}\r\n                    >Submit</button>\r\n                </div>\r\n            </form>\r\n            {isLoading && <p style={{ color: \"white\", marginLeft: \"300px\", fontSize: \"35px\" }}>Loading ......</p>}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AddMovie;","import ShowSearchedMovie from \"./ShowSearchedMovie\";\r\nimport { useState,Fragment } from \"react\";\r\nimport AddMovie from './AddMovie';\r\n\r\nconst ShowSearchedMovies = props => {\r\n    const [addMovie, setAddMovie] = useState(false)\r\n    const [imdbId, setimdbId] = useState('')\r\n\r\n    return (\r\n        <Fragment>\r\n        {!addMovie &&\r\n        <div>\r\n            <div id=\"body\" className=\"home\">\r\n                <div>\r\n                    <ul>\r\n                        {props.results.map((movie) => (\r\n                            <ShowSearchedMovie\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                description={movie.description}\r\n                                image={movie.image}\r\n                                addMovie={setAddMovie}\r\n                                imdbId={setimdbId}\r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        }\r\n            {addMovie && <AddMovie id={imdbId} addMovie={setAddMovie}/>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ShowSearchedMovies;\r\n","import { useCallback,useState, Fragment,useEffect,useRef } from \"react\";\r\nimport ShowSearchedMovies from \"./ShowSearchedMovies\";\r\n\r\nconst SearchMovie = () =>{\r\n\r\n    const [movies,setMovies]=useState([]);\r\n    const titleRef = useRef('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const searchMovieFetch = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const movieName = titleRef.current.value\r\n            const url =\r\n            // \"\"\r\n                // `https://imdb-api.com/en/API/SearchMovie/k_u87040tw/${movieName}`\r\n            //  `https://imdb-api.com/en/API/SearchMovie/k_d40xdze4/${movieName}`\r\n             `https://imdb-api.com/en/API/SearchMovie/k_2e0orz7h/${movieName}`\r\n            \r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();         \r\n            setMovies(data.results);\r\n        } catch (error) {\r\n            console.log(error)\r\n            setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        searchMovieFetch();\r\n    }, [searchMovieFetch]);\r\n\r\n    const searchMovieHandler= event =>{\r\n        event.preventDefault();\r\n        searchMovieFetch();\r\n    }\r\n\r\n    let content = <p></p>;\r\n\r\n    if (error) {\r\n        content = <h1 style={{color:\"red\", marginLeft:\"300px\", fontSize:\"35px\"}}>{error}</h1>;\r\n    }\r\n\r\n    if (isLoading) {\r\n        content = <h1 style={{ color: \"white\", marginLeft: \"300px\", fontSize: \"35px\"}}>Loading...</h1>;\r\n    }\r\n\r\n    return(\r\n        <Fragment >\r\n            <div style={{marginTop:\"300px\"}}>\r\n            <form onSubmit={searchMovieHandler}>\r\n                <div className=\"topnav\">\r\n                    <a>Movie Title</a>\r\n                    <div className=\"search-container\">\r\n                        <input style={{ marginLeft: \"100px\" }} type='text' id='title' ref={titleRef} />\r\n                        <button type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {content}\r\n            {movies && <ShowSearchedMovies style={{}} results={movies} />}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default SearchMovie;"],"sourceRoot":""}