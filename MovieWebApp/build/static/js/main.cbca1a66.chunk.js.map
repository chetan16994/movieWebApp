{"version":3,"sources":["Components/Cart/Checkout.module.css","store/movie-slice.js","Components/Movies/MovieShowing.module.css","Components/Cart/Cart.module.css","Components/Cart/CartItem.module.css","Components/Header/HeaderCartButton.module.css","Components/UI/Modal.module.css","store/ui-slice.js","store/movies-action.js","Components/Movies/MovieForm.module.css","Components/UI/Input.module.css","store/cart-context.js","Components/Cart/CartIcon.js","Components/Header/HeaderCartButton.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/UI/Modal.js","Components/Cart/CartItem.js","Components/UI/NoSeatPopUP.js","Components/Cart/Checkout.js","store/cart-slice.js","Components/Cart/Cart.js","Components/Movies/MovieForm.js","Components/Movies/MoviesListDisplay.js","Components/Movies/MoviesList.js","Components/Movies/MoviesFilter.js","Components/Movies/MoviesSort.js","Components/Movies/MovieShowing.js","Components/Movies/Movies.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["module","exports","movieSlice","createSlice","name","initialState","movies","reducers","setMovies","state","action","payload","console","log","increaseCapacity","id","key","capacity","decreaseCapacity","moviesActions","actions","uiSlice","cartIsVisible","notification","toggle","showNotification","status","title","message","fetchMovieData","dispatch","a","fetchData","fetch","response","ok","Error","json","data","moviesData","sendMovieData","movieData","sendRequest","method","body","JSON","stringify","headers","window","location","reload","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","clearCart","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","props","cartDataRedux","useSelector","cart","useState","btnIsHighlighted","setBtnIsHighlighted","useContext","numberOfCartItems","reduce","curr","amount","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","to","href","onShowCart","HomeFooter","type","value","Backdrop","backdrop","onClose","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","price","toFixed","timing","theater","summary","onRemove","onAdd","NoSeatPopUp","style","color","isEmpty","trim","Checkout","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","useRef","streetInputRef","postalCodeInputRef","cityInputRef","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","onSubmit","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","onConfirm","htmlFor","ref","onCancel","submit","cartSlice","totalQuantity","replaceCart","addItemToCart","newItem","existingItem","find","push","removeItemFromCart","filter","cartActions","Cart","useDispatch","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","ticketAvailable","setTicketAvailable","showPopUP","setShowPopUp","hasItems","cartItemRemoveHandler","cartItemAddHandler","submitOrderHandler","userData","user","orderedItems","cartItems","map","bind","modalActions","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent","MovieForm","onAddToCart","marginBottom","marginTop","MoviesListDisplay","tagline","src","image","alt","plot","rows","rating","duration","nowShowing","releaseDate","category","cat","class","MoviesList","movie","onUpdateCartCapacity","MoviesFilter","selected","onChange","onChangeFilter","target","MoviesSort","onChangeSort","MovieShwoing","selectedShowingStatus","onChangeStatus","Movies","filteredCategory","setFilteredCategory","sortedCategory","setSortedCategory","showingStatus","setShowingStatus","filteredAndSortedMovies","i","sort","b","Date","selectedCategory","selectedSort","selectedSortCategory","SearchMovie","lazy","App","responseData","httpError","cartIsShown","setCartIsShown","loadedMovies","tempCat","genres","ele","parseInt","path","element","temp","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","render"],"mappings":"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","file":"static/js/main.cbca1a66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__3JbY7\",\"control\":\"Checkout_control__1emV5\",\"actions\":\"Checkout_actions__3VS0e\",\"submit\":\"Checkout_submit__1XJY6\",\"invalid\":\"Checkout_invalid__1UFuO\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst movieSlice = createSlice({\r\n    name: 'movie',\r\n    initialState: {\r\n        movies: [],\r\n    },\r\n    reducers: {\r\n        setMovies(state,action){\r\n            \r\n            state.movies=action.payload.movies;\r\n            console.log(state.movies);\r\n        },\r\n        increaseCapacity(state,action){\r\n            const id = action.payload;\r\n            for (let key in state.movies) {\r\n                console.log(key, state.movies[key].id)\r\n                if (id === state.movies[key].id) {\r\n                    state.movies[key].capacity += 1;\r\n                }\r\n            }\r\n        },\r\n        decreaseCapacity(state,action){\r\n            const id=action.payload;\r\n            console.log(id)\r\n            for(let key in state.movies){\r\n                console.log(key,state.movies[key].id)\r\n                if (id === state.movies[key].id){\r\n                    state.movies[key].capacity -= 1;\r\n                }\r\n            }\r\n          \r\n        }\r\n\r\n    },\r\n});\r\n\r\nexport const moviesActions = movieSlice.actions;\r\n\r\nexport default movieSlice;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-showing\":\"MovieShowing_movie-showing__t6XUC\",\"movie-showing__control\":\"MovieShowing_movie-showing__control__1cfXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__BFwii\",\"total\":\"Cart_total__O-r7s\",\"actions\":\"Cart_actions__1OSxu\",\"button--alt\":\"Cart_button--alt__2TDfG\",\"button\":\"Cart_button__2GbNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__2WNkr\",\"summary\":\"CartItem_summary__1ljEL\",\"price\":\"CartItem_price__1l3qH\",\"amount\":\"CartItem_amount__1I61l\",\"actions\":\"CartItem_actions__2nqkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__NFxcb\",\"icon\":\"HeaderCartButton_icon__2DLn-\",\"badge\":\"HeaderCartButton_badge__1vUeI\",\"bump\":\"HeaderCartButton_bump__3h6Kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3iHpp\",\"modal\":\"Modal_modal__2oc6d\",\"slide-down\":\"Modal_slide-down__2SvUl\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: { cartIsVisible: false, notification: null },\r\n    reducers: {\r\n        toggle(state) {\r\n            state.cartIsVisible = !state.cartIsVisible;\r\n        },\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message,\r\n            };\r\n        },\r\n    },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;","import { uiActions } from './ui-slice';\r\nimport { moviesActions } from './movie-slice';\r\n\r\nexport const fetchMovieData = () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(\r\n                'https://movie-e96e8-default-rtdb.firebaseio.com/movie.json'\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Could not fetch movie data!');\r\n            }\r\n\r\n            const data = await response.json();\r\n            // console.log(data)\r\n            return data;\r\n        };\r\n\r\n        try {\r\n            const moviesData = await fetchData();\r\n            console.log(moviesData,\" inside axtion\")\r\n            dispatch(\r\n                moviesActions.setMovies({\r\n                    \r\n                        movies: moviesData\r\n                    \r\n                    // items: cartData.items || [],\r\n                    // totalQuantity: cartData.totalQuantity,\r\n                })\r\n            );\r\n        } catch (error) {\r\n           console.log(error)\r\n        }\r\n    };\r\n};\r\n\r\nexport const sendMovieData = (movieData) => {\r\n    return async (dispatch) => {\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://movie-e96e8-default-rtdb.firebaseio.com/movie.json', {\r\n                method: 'POST',\r\n                body: JSON.stringify(movieData),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Sending movie data failed.');\r\n            }\r\n            // props.addMovie(false)\r\n            window.location.reload();\r\n        };\r\n\r\n        try {\r\n            await sendRequest();\r\n        } catch (error) {\r\n            throw new Error(\" Sending movie data failed. \")\r\n        }\r\n    };\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MovieForm_form__3qdSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3JElO\"};","import React from 'react';\r\n\r\nconst CartContext = React.createContext({\r\n    items: [],\r\n    totalAmount: 0,\r\n    addItem: (item) => { },\r\n    removeItem: (id) => { },\r\n    clearCart: () => { }\r\n});\r\n\r\nexport default CartContext;","const CartIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 20 20'\r\n      fill='currentColor'\r\n    >\r\n      <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CartIcon;","import { useContext, useEffect, useState} from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport classes from './HeaderCartButton.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst HeaderCartButton = props =>{\r\n    const cartDataRedux = useSelector((state) => state.cart)\r\n    const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n    const cartCtx=useContext(CartContext);\r\n\r\n    const { items } = cartDataRedux;\r\n\r\n    const numberOfCartItems = cartDataRedux.items.reduce((curr,item)=>{\r\n        return curr+item.amount;\r\n    },0);\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\r\n\r\n    useEffect(() => {\r\n        if (items.length === 0) {\r\n            return;\r\n        }\r\n        setBtnIsHighlighted(true);\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHighlighted(false);\r\n        }, 300);\r\n\r\n        return () => {\r\n            clearTimeout(timer);\r\n        };\r\n    }, [items]);\r\n\r\n    return (\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon />\r\n            </span>\r\n            <span>Your Cart</span>\r\n            <span className={classes.badge}>{numberOfCartItems}</span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default HeaderCartButton;","import { Fragment } from \"react\";\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <div id=\"header\" className=\"header-fixed\">\r\n                    <div>\r\n                        <ul>\r\n                            <li>\r\n                            <NavLink className=\"selected\" to=\"/\">\r\n                                Home\r\n                            </NavLink>\r\n                            </li>\r\n                            {/* <li className=\"selected\">\r\n                                <a href=\"index.html\">Home</a>\r\n                            </li> */}\r\n                            <li>\r\n                            <NavLink className=\"selected\" to=\"/search-movies\">\r\n                                Search Movies\r\n                            </NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"movies.html\">Movies</a>\r\n                                <ul>\r\n                                    <li>\r\n                                        <a href=\"#\">Now Showing</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\">Coming Soon</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"login.html\">Login</a>\r\n                            </li>\r\n                        </ul>\r\n                        <HeaderCartButton onClick={props.onShowCart} />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;","const HomeFooter = () => {\r\n    return(\r\n        <div>\r\n            <div id=\"footer\">\r\n                <div>\r\n                    <div>\r\n                        <span>Quick Links</span>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"index.html\">Home</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"ticket-info.html\">Ticket Info</a>\r\n                            </li>\r\n                            {/* <li>\r\n                                <a href=\"#\">Location</a>\r\n                            </li> */}\r\n                            <li>\r\n                                <a href=\"movies.html\">Now Showing</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"rentals.html\">Rentals</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"about.html\">Contact</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"movies.html\">Comming Soon</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"about.html\">The Company</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"blog.html\">Blog</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <span>Recent Tweets</span>\r\n                        <ul>\r\n                            <li>\r\n                                <p>\r\n                                    Sed id mattis tellus. Proin egestas velit vel neque placerat sed interdum neque porta.\r\n                                </p>\r\n                                {/* <span><a href=\"#\">- 1 day ago</a></span> */}\r\n                            </li>\r\n                            <li>\r\n                                <p>\r\n                                    Praesent at urna ac urna congue convallis.\r\n                                </p>\r\n                                {/* <span><a href=\"#\">- 2 day ago</a></span> */}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <span>Sign Up For Our Mailing List</span>\r\n                        <p>\r\n                            Praesent at urna ac urna congue convallis. Maecenas sed placerat turpis. Duis in dolor ut nibh molestie faucibus.\r\n                        </p>\r\n                        <form action=\"about.html\">\r\n                            {/* <input type=\"text\" onClick=\"this.value='';\" onFocus=\"this.select()\" onBlur=\"this.value=!this.value?'Enter Email Address Here':this.value;\" value=\"Enter Email Address Here\" /> */}\r\n                            <input type=\"submit\" value=\"\" />\r\n                        </form>\r\n                    </div>\r\n                    <p>\r\n                        &#169; 2023 Cinema Theatre\r\n                    </p>\r\n                    <div className=\"connect\">\r\n                        <span>Stay Connected: </span> <a href=\"http://freewebsitetemplates.com/go/facebook/\" id=\"facebook\">facebook</a> <a href=\"http://freewebsitetemplates.com/go/twitter/\" id=\"twitter\">twitter</a> <a href=\"http://freewebsitetemplates.com/go/googleplus/\" id=\"googleplus\">google+</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeFooter;","import { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Modal.module.css';\r\n\r\nconst Backdrop = (props) => {\r\n    return <div className={classes.backdrop} onClick={props.onClose} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>{props.children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays');\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            {ReactDOM.createPortal(<Backdrop onClose={props.onClose}/>, portalElement)}\r\n            {ReactDOM.createPortal(\r\n                <ModalOverlay>{props.children}</ModalOverlay>,\r\n                portalElement\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Modal;","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n    const price = `$${props.price.toFixed(2)}`;\r\n\r\n    return (\r\n        <li className={classes['cart-item']}>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <h4>Show Time : {props.timing}</h4>\r\n                <h4>Screen : {props.theater}</h4>\r\n                <h4>capacity : {props.capacity}</h4>\r\n                <div className={classes.summary}>\r\n                    <span className={classes.price}>{price}</span>\r\n                    <span className={classes.amount}>x {props.amount}</span>\r\n                </div>\r\n            </div>\r\n            <div className={classes.actions}>\r\n                 <button onClick={props.onRemove}>−</button>\r\n               <button onClick={props.onAdd}>+</button>\r\n                \r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default CartItem;","import Modal from \"./Modal\";\r\n\r\nconst NoSeatPopUp =props=>{\r\n    return(\r\n        <Modal >\r\n            <h1 style={{color:'red'}}>no more tickets</h1>\r\n            <button onClick={props.onClose}>\r\n                    Close\r\n                </button>\r\n        </Modal>\r\n    );\r\n};\r\nexport default NoSeatPopUp;","import { useRef, useState } from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = (value) => value.trim() === '';\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n    const [formInputsValidity, setFormInputsValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        postalCode: true,\r\n    });\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredStreet = streetInputRef.current.value;\r\n        const enteredPostalCode = postalCodeInputRef.current.value;\r\n        const enteredCity = cityInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n        setFormInputsValidity({\r\n            name: enteredNameIsValid,\r\n            street: enteredStreetIsValid,\r\n            city: enteredCityIsValid,\r\n            postalCode: enteredPostalCodeIsValid,\r\n        });\r\n\r\n        const formIsValid =\r\n            enteredNameIsValid &&\r\n            enteredStreetIsValid &&\r\n            enteredCityIsValid &&\r\n            enteredPostalCodeIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        props.onConfirm({\r\n            name: enteredName,\r\n            street: enteredStreet,\r\n            city: enteredCity,\r\n            postalCode: enteredPostalCode,\r\n        });\r\n    };\r\n\r\n    const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid\r\n        }`;\r\n    const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid\r\n        }`;\r\n    const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid\r\n        }`;\r\n    const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid\r\n        }`;\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            <div className={nameControlClasses}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' ref={nameInputRef} />\r\n                {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n            </div>\r\n            <div className={streetControlClasses}>\r\n                <label htmlFor='street'>Street</label>\r\n                <input type='text' id='street' ref={streetInputRef} />\r\n                {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n            </div>\r\n            <div className={postalCodeControlClasses}>\r\n                <label htmlFor='postal'>Postal Code</label>\r\n                <input type='text' id='postal' ref={postalCodeInputRef} />\r\n                {!formInputsValidity.postalCode && (\r\n                    <p>Please enter a valid postal code (5 characters long)!</p>\r\n                )}\r\n            </div>\r\n            <div className={cityControlClasses}>\r\n                <label htmlFor='city'>City</label>\r\n                <input type='text' id='city' ref={cityInputRef} />\r\n                {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button type='button' onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Checkout;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        totalQuantity: 0,\r\n        // changed: false,\r\n        items: [],\r\n        totalAmount: 0,\r\n    },\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = 0;\r\n            state.totalAmount=0;\r\n            state.items = [];\r\n            // return defaultCartState;\r\n        },\r\n\r\n        addItemToCart(state, action) {\r\n           \r\n            // update movie capacity as well\r\n            \r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === newItem.id);\r\n            console.log(state)\r\n            \r\n            // state.changed = true;\r\n            state.totalAmount=state.totalAmount+newItem.price ;\r\n\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id:newItem.id,\r\n                    name:newItem.name,\r\n                    timing:newItem.timing,\r\n                    theater: newItem.theater,\r\n                    capacity: newItem.capacity-newItem.amount,\r\n                    amount: newItem.amount,  // make it quantity\r\n                    price: newItem.price,\r\n                });\r\n                state.totalQuantity=state.totalQuantity+newItem.amount;\r\n            } else { \r\n                \r\n                existingItem.amount = existingItem.amount + 1;\r\n                existingItem.capacity=existingItem.capacity-1;\r\n                state.totalQuantity=state.totalQuantity+newItem.amount;\r\n                // state.totalAmount = state.totalAmount + newItem.price;\r\n            }\r\n        },\r\n\r\n        removeItemFromCart(state, action) {\r\n            \r\n            // update movie capacity as well\r\n\r\n            const id = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === id);\r\n            console.log(existingItem)\r\n            state.totalQuantity--;\r\n            existingItem.capacity++;\r\n            // state.changed = true;\r\n            state.totalAmount=state.totalAmount-existingItem.price;\r\n            if (existingItem.amount === 1) {\r\n                state.items = state.items.filter((item) => item.id !== id);\r\n            } else {\r\n                existingItem.amount--;\r\n                // existingItem.amount = existingItem.amount - existingItem.price;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;","import { useContext, useState, Fragment, useEffect } from 'react';\r\nimport classes from './Cart.module.css';\r\nimport Modal from '../UI/Modal';\r\nimport CartItem from './CartItem';\r\nimport CartContext from '../../store/cart-context';\r\nimport NoSeatPopUp from '../UI/NoSeatPopUP';\r\nimport Checkout from './Checkout';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { cartActions } from '../../store/cart-slice';\r\nimport { moviesActions } from '../../store/movie-slice';\r\n\r\nconst Cart = props => {\r\n    const dispatch=useDispatch();\r\n    const [isCheckout, setIsCheckout] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [didSubmit, setDidSubmit] = useState(false);\r\n    const cartCtx = useContext(CartContext);\r\n    const cartDataRedux=useSelector((state)=>state.cart)\r\n\r\n    const [ticketAvailable, setTicketAvailable] = useState(true);\r\n    const [showPopUP, setShowPopUp] = useState(true);\r\n\r\n    const totalAmount = `$${cartDataRedux.totalAmount.toFixed(2)}`;\r\n    const hasItems = cartDataRedux.items.length > 0;\r\n\r\n    const hidePopUpHandler = () => {\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    const cartItemRemoveHandler = (item) => {\r\n        dispatch(cartActions.removeItemFromCart(item.id))\r\n        dispatch(moviesActions.increaseCapacity(item.id));\r\n        console.log(cartDataRedux, \" cartData redux\")\r\n        console.log(item)\r\n        // item.capacity = item.capacity + 1;\r\n        // props.onUpdateCartCapacity(item.id, -1);\r\n        // cartCtx.removeItem(item);\r\n    };\r\n\r\n    const cartItemAddHandler = (item) => {\r\n        \r\n        if (item.capacity > 0) {\r\n            dispatch(moviesActions.decreaseCapacity(item.id));\r\n            dispatch(cartActions.addItemToCart(item))\r\n            // item.capacity = item.capacity - 1;\r\n            // cartCtx.addItem({ ...item, amount: 1 });\r\n            // props.onUpdateCartCapacity(item.id, 1);\r\n        } else {\r\n            setShowPopUp(true);\r\n            setTicketAvailable(false);\r\n        }\r\n    };\r\n\r\n    const orderHandler = () => {\r\n        setIsCheckout(true);\r\n    };\r\n\r\n    const submitOrderHandler = async (userData) => {\r\n        setIsSubmitting(true);\r\n        await fetch('https://movie-e96e8-default-rtdb.firebaseio.com/orders.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                user: userData,\r\n                orderedItems: cartDataRedux,\r\n            }),\r\n        });\r\n        setIsSubmitting(false);\r\n        setDidSubmit(true);\r\n        cartActions.replaceCart();\r\n    };\r\n\r\n    \r\n\r\n    const cartItems = (\r\n        <ul className={classes['cart-items']}>\r\n            {cartDataRedux.items.map((item) => (\r\n\r\n                //  const price = `$${props.price.toFixed(2)}`;\r\n\r\n            \r\n            // <li className={classes['cart-item']}>\r\n            //     <div>\r\n            //         <h2>{props.name}</h2>\r\n            //         <h4>Show Time : {item.timing}</h4>\r\n            //         <h4>Screen : {item.theater}</h4>\r\n            //             <h4>capacity : {item.capacity}</h4>\r\n            //         <div className={classes.summary}>\r\n            //                 <span className={classes.price}>$ {item.price}</span>\r\n            //                 <span className={classes.amount}>x {item.amount}</span>\r\n            //         </div>\r\n            //     </div>\r\n            //     <div className={classes.actions}>\r\n            //             <button onClick={cartItemRemoveHandler}>−</button>\r\n            //             <button onClick={cartItemAddHandler}>+</button>\r\n            //     </div>\r\n            // </li>\r\n\r\n\r\n                <CartItem\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    timing={item.timing}\r\n                    theater={item.theater}\r\n                    capacity={item.capacity}\r\n                    amount={item.amount}\r\n                    price={item.price}\r\n                    onRemove={cartItemRemoveHandler.bind(null, item)}\r\n                    onAdd={cartItemAddHandler.bind(null, item)}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n\r\n    const modalActions = (\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>\r\n                Close\r\n            </button>\r\n            {hasItems && (\r\n                <button className={classes.button} onClick={orderHandler}>\r\n                    Order\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    const cartModalContent = (\r\n        <Fragment>\r\n            {!ticketAvailable && showPopUP && <NoSeatPopUp onClose={hidePopUpHandler} />}\r\n            <Modal onClose={props.onClose}>\r\n                {cartItems}\r\n                <div className={classes.total} >\r\n                    <span>Total Amount</span>\r\n                    <span>{totalAmount}</span>\r\n                </div>\r\n                {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\r\n                {!isCheckout && modalActions}\r\n            </Modal>\r\n        </Fragment>\r\n    );\r\n    \r\n    const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n    const didSubmitModalContent = (\r\n        <Fragment>\r\n            <p>Successfully sent the order!</p>\r\n            <div className={classes.actions}>\r\n                <button className={classes.button} onClick={props.onClose}>\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            {!isSubmitting && !didSubmit && cartModalContent}\r\n            {isSubmitting && isSubmittingModalContent}\r\n            {!isSubmitting && didSubmit && didSubmitModalContent}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default Cart;","import { useRef, useState } from 'react';\r\nimport classes from './MovieForm.module.css';\r\nimport Input from '../UI/Input';\r\n\r\nconst MovieForm = props =>{\r\n    // const [amountIsValid, setAmountIsValid] = useState(true);\r\n    // const amountInputRef = useRef();\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        // const enteredAmount = amountInputRef.current.value;\r\n        // const enteredAmountNumber = +enteredAmount;\r\n\r\n        // if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\r\n        //     setAmountIsValid(false);\r\n        //     return;\r\n        // }\r\n        props.onAddToCart(1);\r\n    };\r\n    return (\r\n        <form className={classes.form} \r\n        onSubmit={submitHandler}\r\n        >\r\n            {/* <Input\r\n                ref={amountInputRef}\r\n                label='Amount'\r\n                input={{\r\n                    id: 'amount_' + props.id,\r\n                    type: 'number',\r\n                    min: '1',\r\n                    max: '5',\r\n                    step: '1',\r\n                    defaultValue: '1',\r\n                }}\r\n            /> */}\r\n            <button style={{ marginBottom: '15px', marginTop: '7px'}} >+ Add</button>\r\n            {/* {!amountIsValid && <p>Please eneter valid amount</p>} */}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MovieForm;","import { useContext,useState } from 'react';\r\nimport MovieForm from './MovieForm';\r\nimport CartContext from '../../store/cart-context';\r\nimport NoSeatPopUp from '../UI/NoSeatPopUP';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { cartActions } from '../../store/cart-slice';\r\nimport { moviesActions } from '../../store/movie-slice';\r\n\r\nconst MoviesListDisplay = props => {\r\n    const dispatch=useDispatch();\r\n    const cartDataRedux = useSelector((state) => state.cart)\r\n    const cartCtx = useContext(CartContext);\r\n    const [ticketAvailable, setTicketAvailable]=useState(true);\r\n    const [showPopUP,setShowPopUp]=useState(true);\r\n\r\n    const hidePopUpHandler =()=>{\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    const addToCartHandler = () => {\r\n        const item = {\r\n            id: props.id,\r\n            name: props.name,\r\n            amount: 1,\r\n            price: props.price,\r\n            theater: props.theater,\r\n            capacity: props.capacity,\r\n            timing: props.timing\r\n        };\r\n\r\n        if(props.capacity>0){\r\n\r\n        //  update cart slice instead of cart context and pther \r\n            dispatch(cartActions.addItemToCart(item));\r\n            dispatch(moviesActions.decreaseCapacity(item.id));\r\n     \r\n        }else{\r\n            setShowPopUp(true);\r\n            setTicketAvailable(false);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <li >\r\n                <div>\r\n                    <h2 className=\"test\">{props.name}</h2>\r\n                    <span>{props.tagline}</span>\r\n                    <a className=\"test1\" href=\"movies.html\"><img className=\"testimage\" src={props.image} alt=\"\" /></a>\r\n                </div>\r\n                <br />\r\n                <span>Overview</span>\r\n                <textarea value={props.plot} rows='7' />\r\n                \r\n                <span ><strong className=\"r-bg\">Rating: {props.rating}</strong></span>\r\n                <span>Duration: {props.duration}</span>\r\n                {props.nowShowing === 'now showing' && <span>Show timimg: {props.timing}</span>}\r\n                {props.nowShowing === 'now showing' && <span>Price: {props.price} $</span>}\r\n                {props.nowShowing === 'now showing' && <span>Capacity: {props.capacity}</span>}\r\n                {props.nowShowing === 'now showing' && <span>Screen: {props.theater}</span>}\r\n                <span>Release Date : {props.releaseDate}</span>\r\n                <span>Category:  </span>\r\n                {props.category.length!==0?props.category.map((cat) => <span >{cat}, </span>):\"\"}                \r\n                {props.nowShowing === 'now showing' && <MovieForm id={props.id} onAddToCart={addToCartHandler} />}\r\n                <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                \r\n            </li>\r\n            {!ticketAvailable && showPopUP && <NoSeatPopUp onClose={hidePopUpHandler}/>}\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default MoviesListDisplay;","import MoviesListDisplay from \"./MoviesListDisplay\";\r\nconst MoviesList = props => {\r\n    return (\r\n        <div>\r\n            <div id=\"body\" className=\"home\">\r\n                <div>\r\n                    <ul>\r\n                        {props.data.map((movie) => (\r\n                            <MoviesListDisplay\r\n                                name={movie.name}\r\n                                releaseDate={movie.releaseDate}\r\n                                id={movie.id}\r\n                                category={movie.category}\r\n                                rating={movie.rating}\r\n                                image={movie.image}\r\n                                timing={movie.timing}\r\n                                plot={movie.plot}\r\n                                duration={movie.duration}\r\n                                tagline={movie.tagline}\r\n                                theater={movie.theater}\r\n                                capacity={movie.capacity}\r\n                                price={movie.price}\r\n                                nowShowing={movie.nowShowing}\r\n                                onUpdateCartCapacity={props.onUpdateCartCapacity}\r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviesList;","import classes from './MovieShowing.module.css';\r\nconst MoviesFilter = props => {\r\n\r\n    const dropDownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes['movie-showing']}>\r\n            <div className={classes['movie-showing__control']}>\r\n                <label>Category </label>\r\n                <select value={props.selected} onChange={dropDownChangeHandler}>\r\n                    <option value=\"\" >Select a category</option>\r\n                    <option value='All'>All Category</option>\r\n                    <option value='Action'>Action</option>\r\n                    <option value='Thriller'>Thriller</option>\r\n                    <option value='Animation'>Animation</option>\r\n                    <option value='Comedy'>Comedy</option>\r\n                    <option value='Sci-Fi'>Sci-Fi</option>\r\n                    <option value='Drama'>Drama</option>\r\n                    <option value='Horror'>Horror</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesFilter;","import classes from './MovieShowing.module.css';\r\n\r\nconst MoviesSort = props => {\r\n\r\n    const dropDownSortChangeHandler = (event) => {\r\n        props.onChangeSort(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes['movie-showing']}>\r\n            <div className={classes['movie-showing__control']}>\r\n                <label>Sort </label>\r\n                <select value={props.selected} onChange={dropDownSortChangeHandler}>\r\n                    <option value=\"\" >Select a category</option>\r\n                    <option value='rating'>Ratings</option>\r\n                    <option value='releaseDate'>Release Date</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MoviesSort;","import classes from './MovieShowing.module.css';\r\n\r\nconst MovieShwoing = props => {\r\n    \r\n    const dropDownChangeHandler = (event) => {\r\n        props.onChangeStatus(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes['movie-showing']}>\r\n            <div className={classes['movie-showing__control']}>\r\n                <label>Show Status </label>\r\n                <select value={props.selectedShowingStatus} onChange={dropDownChangeHandler}>\r\n                    <option value=\"\" >Select a category</option>\r\n                    <option value=\"\">ALL</option>\r\n                    <option value='now showing'>Now Showing</option>\r\n                    <option value='coming soon'>Coming Soon</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieShwoing;","import MoviesList from \"./MoviesList\";\r\nimport {useState} from 'react';\r\nimport MoviesFilter from \"./MoviesFilter\";\r\nimport MoviesSort from \"./MoviesSort\";\r\nimport MovieShwoing from \"./MovieShowing\";\r\n\r\nconst Movies = (props) => {\r\n    \r\n    const [filteredCategory, setFilteredCategory] = useState('');\r\n    const [sortedCategory, setSortedCategory] = useState('');\r\n    const [showingStatus, setShowingStatus] = useState('');\r\n\r\n    const filterChangeHandler = (selectedCategory) => {\r\n        setFilteredCategory(selectedCategory);\r\n    };\r\n\r\n    const sortedChangeHandler = (selectedSortCategory) => {\r\n        setSortedCategory(selectedSortCategory);\r\n    };\r\n\r\n    const showingStatusHandler = (showingStatus) => {\r\n        setShowingStatus(showingStatus)\r\n    };\r\n\r\n    // const filteredAndSortedMovies = filterAndSortMovies(props.data);\r\n\r\n    const filteredAndSortedMovies = props.data.filter((movie) => {       \r\n        if (filteredCategory.length === 0 || filteredCategory==='All'){\r\n                return props.data;\r\n        } \r\n        if (movie.category.length===0) return;\r\n        for(let i=0; i<movie.category.length;i++){\r\n            if (movie.category[i]===filteredCategory)\r\n                    return movie.category[i] === filteredCategory;\r\n        }\r\n    }).filter((movie) =>{\r\n        if (showingStatus==='now showing')\r\n            return movie.nowShowing === 'now showing';\r\n        if (showingStatus === 'coming soon')\r\n            return movie.nowShowing === 'coming soon';\r\n        return props.data\r\n    })\r\n    .sort((a,b) =>{\r\n        if (sortedCategory === 'releaseDate'){  \r\n            return new Date(b[sortedCategory]) - new Date(a[sortedCategory]);\r\n        }\r\n        return ((b[sortedCategory]) - (a[sortedCategory]));        \r\n    });\r\n\r\n    return (\r\n        <div className=\"align-movieBox\">\r\n            <MovieShwoing \r\n                selectedShowingStatus={showingStatus}\r\n                onChangeStatus={showingStatusHandler}\r\n            />\r\n            <MoviesFilter \r\n                selected={filteredCategory}\r\n                onChangeFilter={filterChangeHandler}\r\n            />\r\n            <MoviesSort \r\n                selectedSort={sortedCategory}\r\n                onChangeSort={sortedChangeHandler}\r\n            />\r\n            <MoviesList data={filteredAndSortedMovies} onUpdateCartCapacity={props.onUpdateCartCapacity}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Movies;","import { useState, useEffect, Fragment,React } from 'react';\nimport './App.css';\nimport { Routes, Route} from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport Cart from './Components/Cart/Cart';\nimport Movies from './Components/Movies/Movies';\nimport CartProvider from './store/CartProvider';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMovieData } from './store/movies-action';\n\nconst SearchMovie = React.lazy(() => import('./Components/Movies/SearchMovie') );\n\nfunction App() {\n\n  const dispatch =useDispatch();\n  const responseData = useSelector((state) => state.movies.movies  );\n  // const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  const [movies,setMovies]=useState([]);\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n\n  const updateCapacityHandler = (id) =>{\n    \n    const temp=movies.map((movie)=>{\n      if(movie.id===id) movie.capacity=movie.capacity-1;\n      return movie;\n    });\n    setMovies(temp);\n  };\n\n  useEffect(() => {\n    dispatch(fetchMovieData());\n  }, [dispatch]);\n  \n  useEffect(()=>{\n    const loadedMovies = [];\n    for (const key in responseData) {\n      const tempCat = [];\n      responseData[key].genres.map((ele) => {\n        tempCat.push(ele.value)\n      })\n\n      loadedMovies.push({\n        id: responseData[key].id,\n        name: responseData[key].name,\n        image: responseData[key].image,\n        price: responseData[key].price != \"none\" ? parseInt(responseData[key].price) : \"none\",\n        plot: responseData[key].plot,\n        rating: responseData[key].rating,\n        capacity: responseData[key].capacity,\n        duration: responseData[key].duration,\n        releaseDate: responseData[key].releaseDate,\n        nowShowing: responseData[key].showingStatus,\n        tagline: responseData[key].tagline,\n        theater: responseData[key].theater,\n        timing: responseData[key].timing,\n        category: tempCat,\n      });\n    }\n    \n    setMovies(loadedMovies);\n  }, [responseData]);\n  \n  if (httpError) {\n    return (\n      <section style={{ color: \"red\" }}>\n        <p >{httpError}</p>\n      </section>\n    );\n  }\n\n  return (\n    <Fragment>\n      <Header onShowCart={showCartHandler} />\n      {cartIsShown && <Cart\n        // onUpdateCartCapacity={updateCapacityHandler} \n        onClose={hideCartHandler} />}\n    <Routes>\n            \n      <Route path=\"/\" element={<Movies data={movies} onUpdateCartCapacity={updateCapacityHandler} />} />\n      <Route path=\"/search-movies\" element={<SearchMovie />} />\n      \n    </Routes>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\r\n\r\nimport movieSlice from './movie-slice';\r\nimport cartSlice from './cart-slice';\r\n\r\nconst store = configureStore({\r\n    reducer: { cart:cartSlice.reducer, movies: movieSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/index';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}